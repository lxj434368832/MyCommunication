// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_INCLUDED_Message_2eproto
#define PROTOBUF_INCLUDED_Message_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Message_2eproto 

namespace protobuf_Message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Message_2eproto
namespace pbmsg {
class Friend;
class FriendDefaultTypeInternal;
extern FriendDefaultTypeInternal _Friend_default_instance_;
class FriendNotification;
class FriendNotificationDefaultTypeInternal;
extern FriendNotificationDefaultTypeInternal _FriendNotification_default_instance_;
class GetFriendsResponse;
class GetFriendsResponseDefaultTypeInternal;
extern GetFriendsResponseDefaultTypeInternal _GetFriendsResponse_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class MessageNotification;
class MessageNotificationDefaultTypeInternal;
extern MessageNotificationDefaultTypeInternal _MessageNotification_default_instance_;
class Notification;
class NotificationDefaultTypeInternal;
extern NotificationDefaultTypeInternal _Notification_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class SendMessageRequest;
class SendMessageRequestDefaultTypeInternal;
extern SendMessageRequestDefaultTypeInternal _SendMessageRequest_default_instance_;
class WelcomeNotification;
class WelcomeNotificationDefaultTypeInternal;
extern WelcomeNotificationDefaultTypeInternal _WelcomeNotification_default_instance_;
}  // namespace pbmsg
namespace google {
namespace protobuf {
template<> ::pbmsg::Friend* Arena::CreateMaybeMessage<::pbmsg::Friend>(Arena*);
template<> ::pbmsg::FriendNotification* Arena::CreateMaybeMessage<::pbmsg::FriendNotification>(Arena*);
template<> ::pbmsg::GetFriendsResponse* Arena::CreateMaybeMessage<::pbmsg::GetFriendsResponse>(Arena*);
template<> ::pbmsg::LoginRequest* Arena::CreateMaybeMessage<::pbmsg::LoginRequest>(Arena*);
template<> ::pbmsg::LoginResponse* Arena::CreateMaybeMessage<::pbmsg::LoginResponse>(Arena*);
template<> ::pbmsg::Message* Arena::CreateMaybeMessage<::pbmsg::Message>(Arena*);
template<> ::pbmsg::MessageNotification* Arena::CreateMaybeMessage<::pbmsg::MessageNotification>(Arena*);
template<> ::pbmsg::Notification* Arena::CreateMaybeMessage<::pbmsg::Notification>(Arena*);
template<> ::pbmsg::Request* Arena::CreateMaybeMessage<::pbmsg::Request>(Arena*);
template<> ::pbmsg::Response* Arena::CreateMaybeMessage<::pbmsg::Response>(Arena*);
template<> ::pbmsg::SendMessageRequest* Arena::CreateMaybeMessage<::pbmsg::SendMessageRequest>(Arena*);
template<> ::pbmsg::WelcomeNotification* Arena::CreateMaybeMessage<::pbmsg::WelcomeNotification>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pbmsg {

enum MSG {
  Login_Request = 10001,
  Login_Response = 10002,
  Logout_Request = 10003,
  Logout_Response = 10004,
  Keepalive_Request = 10005,
  Keepalive_Response = 10006,
  Get_Friends_Request = 10007,
  Get_Friends_Response = 10008,
  Send_Message_Request = 10009,
  Send_Message_Response = 10010,
  Friend_Notification = 20001,
  Message_Notification = 20002,
  Welcome_Notification = 20003
};
bool MSG_IsValid(int value);
const MSG MSG_MIN = Login_Request;
const MSG MSG_MAX = Welcome_Notification;
const int MSG_ARRAYSIZE = MSG_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_descriptor();
inline const ::std::string& MSG_Name(MSG value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_descriptor(), value);
}
inline bool MSG_Parse(
    const ::std::string& name, MSG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG>(
    MSG_descriptor(), name, value);
}
enum ERR_CODE {
  CLIENT_ERR_REFUSE = 100001,
  CLIENT_ERR_ACCEPT = 100002,
  SERVER1_ERR_STOP = 200001,
  SERVER2_ERR_OVERLOAD = 300001
};
bool ERR_CODE_IsValid(int value);
const ERR_CODE ERR_CODE_MIN = CLIENT_ERR_REFUSE;
const ERR_CODE ERR_CODE_MAX = SERVER2_ERR_OVERLOAD;
const int ERR_CODE_ARRAYSIZE = ERR_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERR_CODE_descriptor();
inline const ::std::string& ERR_CODE_Name(ERR_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERR_CODE_descriptor(), value);
}
inline bool ERR_CODE_Parse(
    const ::std::string& name, ERR_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERR_CODE>(
    ERR_CODE_descriptor(), name, value);
}
// ===================================================================

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const final {
    return CreateMaybeMessage<LoginRequest>(NULL);
  }

  LoginRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:pbmsg.LoginRequest)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const final {
    return CreateMaybeMessage<LoginResponse>(NULL);
  }

  LoginResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 ttl = 1;
  bool has_ttl() const;
  void clear_ttl();
  static const int kTtlFieldNumber = 1;
  ::google::protobuf::uint32 ttl() const;
  void set_ttl(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbmsg.LoginResponse)
 private:
  void set_has_ttl();
  void clear_has_ttl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 ttl_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Friend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Friend) */ {
 public:
  Friend();
  virtual ~Friend();

  Friend(const Friend& from);

  inline Friend& operator=(const Friend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Friend(Friend&& from) noexcept
    : Friend() {
    *this = ::std::move(from);
  }

  inline Friend& operator=(Friend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Friend* internal_default_instance() {
    return reinterpret_cast<const Friend*>(
               &_Friend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Friend* other);
  friend void swap(Friend& a, Friend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Friend* New() const final {
    return CreateMaybeMessage<Friend>(NULL);
  }

  Friend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Friend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Friend& from);
  void MergeFrom(const Friend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Friend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool online = 2;
  bool has_online() const;
  void clear_online();
  static const int kOnlineFieldNumber = 2;
  bool online() const;
  void set_online(bool value);

  // @@protoc_insertion_point(class_scope:pbmsg.Friend)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_online();
  void clear_has_online();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool online_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFriendsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.GetFriendsResponse) */ {
 public:
  GetFriendsResponse();
  virtual ~GetFriendsResponse();

  GetFriendsResponse(const GetFriendsResponse& from);

  inline GetFriendsResponse& operator=(const GetFriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFriendsResponse(GetFriendsResponse&& from) noexcept
    : GetFriendsResponse() {
    *this = ::std::move(from);
  }

  inline GetFriendsResponse& operator=(GetFriendsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFriendsResponse* internal_default_instance() {
    return reinterpret_cast<const GetFriendsResponse*>(
               &_GetFriendsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetFriendsResponse* other);
  friend void swap(GetFriendsResponse& a, GetFriendsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFriendsResponse* New() const final {
    return CreateMaybeMessage<GetFriendsResponse>(NULL);
  }

  GetFriendsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetFriendsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetFriendsResponse& from);
  void MergeFrom(const GetFriendsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetFriendsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbmsg.Friend friends = 1;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 1;
  ::pbmsg::Friend* mutable_friends(int index);
  ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >*
      mutable_friends();
  const ::pbmsg::Friend& friends(int index) const;
  ::pbmsg::Friend* add_friends();
  const ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >&
      friends() const;

  // @@protoc_insertion_point(class_scope:pbmsg.GetFriendsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend > friends_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.SendMessageRequest) */ {
 public:
  SendMessageRequest();
  virtual ~SendMessageRequest();

  SendMessageRequest(const SendMessageRequest& from);

  inline SendMessageRequest& operator=(const SendMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMessageRequest(SendMessageRequest&& from) noexcept
    : SendMessageRequest() {
    *this = ::std::move(from);
  }

  inline SendMessageRequest& operator=(SendMessageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMessageRequest* internal_default_instance() {
    return reinterpret_cast<const SendMessageRequest*>(
               &_SendMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SendMessageRequest* other);
  friend void swap(SendMessageRequest& a, SendMessageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMessageRequest* New() const final {
    return CreateMaybeMessage<SendMessageRequest>(NULL);
  }

  SendMessageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendMessageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendMessageRequest& from);
  void MergeFrom(const SendMessageRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes receiver = 1;
  bool has_receiver() const;
  void clear_receiver();
  static const int kReceiverFieldNumber = 1;
  const ::std::string& receiver() const;
  void set_receiver(const ::std::string& value);
  #if LANG_CXX11
  void set_receiver(::std::string&& value);
  #endif
  void set_receiver(const char* value);
  void set_receiver(const void* value, size_t size);
  ::std::string* mutable_receiver();
  ::std::string* release_receiver();
  void set_allocated_receiver(::std::string* receiver);

  // required bytes text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:pbmsg.SendMessageRequest)
 private:
  void set_has_receiver();
  void clear_has_receiver();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr receiver_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FriendNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.FriendNotification) */ {
 public:
  FriendNotification();
  virtual ~FriendNotification();

  FriendNotification(const FriendNotification& from);

  inline FriendNotification& operator=(const FriendNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FriendNotification(FriendNotification&& from) noexcept
    : FriendNotification() {
    *this = ::std::move(from);
  }

  inline FriendNotification& operator=(FriendNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FriendNotification* internal_default_instance() {
    return reinterpret_cast<const FriendNotification*>(
               &_FriendNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(FriendNotification* other);
  friend void swap(FriendNotification& a, FriendNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FriendNotification* New() const final {
    return CreateMaybeMessage<FriendNotification>(NULL);
  }

  FriendNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FriendNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FriendNotification& from);
  void MergeFrom(const FriendNotification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FriendNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool online = 2;
  bool has_online() const;
  void clear_online();
  static const int kOnlineFieldNumber = 2;
  bool online() const;
  void set_online(bool value);

  // @@protoc_insertion_point(class_scope:pbmsg.FriendNotification)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_online();
  void clear_has_online();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool online_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.MessageNotification) */ {
 public:
  MessageNotification();
  virtual ~MessageNotification();

  MessageNotification(const MessageNotification& from);

  inline MessageNotification& operator=(const MessageNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageNotification(MessageNotification&& from) noexcept
    : MessageNotification() {
    *this = ::std::move(from);
  }

  inline MessageNotification& operator=(MessageNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageNotification* internal_default_instance() {
    return reinterpret_cast<const MessageNotification*>(
               &_MessageNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MessageNotification* other);
  friend void swap(MessageNotification& a, MessageNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageNotification* New() const final {
    return CreateMaybeMessage<MessageNotification>(NULL);
  }

  MessageNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MessageNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MessageNotification& from);
  void MergeFrom(const MessageNotification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes sender = 1;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const void* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // required bytes text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required string timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // @@protoc_insertion_point(class_scope:pbmsg.MessageNotification)
 private:
  void set_has_sender();
  void clear_has_sender();
  void set_has_text();
  void clear_has_text();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WelcomeNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.WelcomeNotification) */ {
 public:
  WelcomeNotification();
  virtual ~WelcomeNotification();

  WelcomeNotification(const WelcomeNotification& from);

  inline WelcomeNotification& operator=(const WelcomeNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WelcomeNotification(WelcomeNotification&& from) noexcept
    : WelcomeNotification() {
    *this = ::std::move(from);
  }

  inline WelcomeNotification& operator=(WelcomeNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelcomeNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WelcomeNotification* internal_default_instance() {
    return reinterpret_cast<const WelcomeNotification*>(
               &_WelcomeNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(WelcomeNotification* other);
  friend void swap(WelcomeNotification& a, WelcomeNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WelcomeNotification* New() const final {
    return CreateMaybeMessage<WelcomeNotification>(NULL);
  }

  WelcomeNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WelcomeNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WelcomeNotification& from);
  void MergeFrom(const WelcomeNotification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WelcomeNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:pbmsg.WelcomeNotification)
 private:
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pbmsg.LoginRequest login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  private:
  const ::pbmsg::LoginRequest& _internal_login() const;
  public:
  const ::pbmsg::LoginRequest& login() const;
  ::pbmsg::LoginRequest* release_login();
  ::pbmsg::LoginRequest* mutable_login();
  void set_allocated_login(::pbmsg::LoginRequest* login);

  // optional .pbmsg.SendMessageRequest send_message = 2;
  bool has_send_message() const;
  void clear_send_message();
  static const int kSendMessageFieldNumber = 2;
  private:
  const ::pbmsg::SendMessageRequest& _internal_send_message() const;
  public:
  const ::pbmsg::SendMessageRequest& send_message() const;
  ::pbmsg::SendMessageRequest* release_send_message();
  ::pbmsg::SendMessageRequest* mutable_send_message();
  void set_allocated_send_message(::pbmsg::SendMessageRequest* send_message);

  // @@protoc_insertion_point(class_scope:pbmsg.Request)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_send_message();
  void clear_has_send_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::pbmsg::LoginRequest* login_;
  ::pbmsg::SendMessageRequest* send_message_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes error_describe = 3;
  bool has_error_describe() const;
  void clear_error_describe();
  static const int kErrorDescribeFieldNumber = 3;
  const ::std::string& error_describe() const;
  void set_error_describe(const ::std::string& value);
  #if LANG_CXX11
  void set_error_describe(::std::string&& value);
  #endif
  void set_error_describe(const char* value);
  void set_error_describe(const void* value, size_t size);
  ::std::string* mutable_error_describe();
  ::std::string* release_error_describe();
  void set_allocated_error_describe(::std::string* error_describe);

  // optional .pbmsg.LoginResponse login = 4;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 4;
  private:
  const ::pbmsg::LoginResponse& _internal_login() const;
  public:
  const ::pbmsg::LoginResponse& login() const;
  ::pbmsg::LoginResponse* release_login();
  ::pbmsg::LoginResponse* mutable_login();
  void set_allocated_login(::pbmsg::LoginResponse* login);

  // optional .pbmsg.GetFriendsResponse get_friends = 5;
  bool has_get_friends() const;
  void clear_get_friends();
  static const int kGetFriendsFieldNumber = 5;
  private:
  const ::pbmsg::GetFriendsResponse& _internal_get_friends() const;
  public:
  const ::pbmsg::GetFriendsResponse& get_friends() const;
  ::pbmsg::GetFriendsResponse* release_get_friends();
  ::pbmsg::GetFriendsResponse* mutable_get_friends();
  void set_allocated_get_friends(::pbmsg::GetFriendsResponse* get_friends);

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // required bool last_response = 2;
  bool has_last_response() const;
  void clear_last_response();
  static const int kLastResponseFieldNumber = 2;
  bool last_response() const;
  void set_last_response(bool value);

  // @@protoc_insertion_point(class_scope:pbmsg.Response)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_last_response();
  void clear_has_last_response();
  void set_has_error_describe();
  void clear_has_error_describe();
  void set_has_login();
  void clear_has_login();
  void set_has_get_friends();
  void clear_has_get_friends();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_describe_;
  ::pbmsg::LoginResponse* login_;
  ::pbmsg::GetFriendsResponse* get_friends_;
  bool result_;
  bool last_response_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Notification) */ {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Notification(Notification&& from) noexcept
    : Notification() {
    *this = ::std::move(from);
  }

  inline Notification& operator=(Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notification* internal_default_instance() {
    return reinterpret_cast<const Notification*>(
               &_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Notification* other);
  friend void swap(Notification& a, Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Notification* New() const final {
    return CreateMaybeMessage<Notification>(NULL);
  }

  Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pbmsg.FriendNotification friend = 1;
  bool has_friend_() const;
  void clear_friend_();
  static const int kFriendFieldNumber = 1;
  private:
  const ::pbmsg::FriendNotification& _internal_friend_() const;
  public:
  const ::pbmsg::FriendNotification& friend_() const;
  ::pbmsg::FriendNotification* release_friend_();
  ::pbmsg::FriendNotification* mutable_friend_();
  void set_allocated_friend_(::pbmsg::FriendNotification* friend_);

  // optional .pbmsg.MessageNotification msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  private:
  const ::pbmsg::MessageNotification& _internal_msg() const;
  public:
  const ::pbmsg::MessageNotification& msg() const;
  ::pbmsg::MessageNotification* release_msg();
  ::pbmsg::MessageNotification* mutable_msg();
  void set_allocated_msg(::pbmsg::MessageNotification* msg);

  // optional .pbmsg.WelcomeNotification welcome = 3;
  bool has_welcome() const;
  void clear_welcome();
  static const int kWelcomeFieldNumber = 3;
  private:
  const ::pbmsg::WelcomeNotification& _internal_welcome() const;
  public:
  const ::pbmsg::WelcomeNotification& welcome() const;
  ::pbmsg::WelcomeNotification* release_welcome();
  ::pbmsg::WelcomeNotification* mutable_welcome();
  void set_allocated_welcome(::pbmsg::WelcomeNotification* welcome);

  // @@protoc_insertion_point(class_scope:pbmsg.Notification)
 private:
  void set_has_friend_();
  void clear_has_friend_();
  void set_has_msg();
  void clear_has_msg();
  void set_has_welcome();
  void clear_has_welcome();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::pbmsg::FriendNotification* friend__;
  ::pbmsg::MessageNotification* msg_;
  ::pbmsg::WelcomeNotification* welcome_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(NULL);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pbmsg.Request request = 4;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 4;
  private:
  const ::pbmsg::Request& _internal_request() const;
  public:
  const ::pbmsg::Request& request() const;
  ::pbmsg::Request* release_request();
  ::pbmsg::Request* mutable_request();
  void set_allocated_request(::pbmsg::Request* request);

  // optional .pbmsg.Response response = 5;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 5;
  private:
  const ::pbmsg::Response& _internal_response() const;
  public:
  const ::pbmsg::Response& response() const;
  ::pbmsg::Response* release_response();
  ::pbmsg::Response* mutable_response();
  void set_allocated_response(::pbmsg::Response* response);

  // optional .pbmsg.Notification notification = 6;
  bool has_notification() const;
  void clear_notification();
  static const int kNotificationFieldNumber = 6;
  private:
  const ::pbmsg::Notification& _internal_notification() const;
  public:
  const ::pbmsg::Notification& notification() const;
  ::pbmsg::Notification* release_notification();
  ::pbmsg::Notification* mutable_notification();
  void set_allocated_notification(::pbmsg::Notification* notification);

  // required fixed32 sequence = 2;
  bool has_sequence() const;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::uint32 sequence() const;
  void set_sequence(::google::protobuf::uint32 value);

  // optional fixed32 session_id = 3;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // required .pbmsg.MSG msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::pbmsg::MSG msg_type() const;
  void set_msg_type(::pbmsg::MSG value);

  // @@protoc_insertion_point(class_scope:pbmsg.Message)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_sequence();
  void clear_has_sequence();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_request();
  void clear_has_request();
  void set_has_response();
  void clear_has_response();
  void set_has_notification();
  void clear_has_notification();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::pbmsg::Request* request_;
  ::pbmsg::Response* response_;
  ::pbmsg::Notification* notification_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::uint32 session_id_;
  int msg_type_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRequest

// required bytes username = 1;
inline bool LoginRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRequest.username)
  return username_.GetNoArena();
}
inline void LoginRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.LoginRequest.username)
}
#if LANG_CXX11
inline void LoginRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.LoginRequest.username)
}
#endif
inline void LoginRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.LoginRequest.username)
}
inline void LoginRequest::set_username(const void* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.LoginRequest.username)
}
inline ::std::string* LoginRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:pbmsg.LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:pbmsg.LoginRequest.username)
  if (!has_username()) {
    return NULL;
  }
  clear_has_username();
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.LoginRequest.username)
}

// optional string password = 2;
inline bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:pbmsg.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:pbmsg.LoginRequest.password)
  if (!has_password()) {
    return NULL;
  }
  clear_has_password();
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// required fixed32 ttl = 1;
inline bool LoginResponse::has_ttl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_ttl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_ttl() {
  ttl_ = 0u;
  clear_has_ttl();
}
inline ::google::protobuf::uint32 LoginResponse::ttl() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginResponse.ttl)
  return ttl_;
}
inline void LoginResponse::set_ttl(::google::protobuf::uint32 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.LoginResponse.ttl)
}

// -------------------------------------------------------------------

// Friend

// required bytes name = 1;
inline bool Friend::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Friend::name() const {
  // @@protoc_insertion_point(field_get:pbmsg.Friend.name)
  return name_.GetNoArena();
}
inline void Friend::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.Friend.name)
}
#if LANG_CXX11
inline void Friend::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.Friend.name)
}
#endif
inline void Friend::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.Friend.name)
}
inline void Friend::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.Friend.name)
}
inline ::std::string* Friend::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pbmsg.Friend.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Friend::release_name() {
  // @@protoc_insertion_point(field_release:pbmsg.Friend.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Friend::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Friend.name)
}

// optional bool online = 2;
inline bool Friend::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool Friend::online() const {
  // @@protoc_insertion_point(field_get:pbmsg.Friend.online)
  return online_;
}
inline void Friend::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Friend.online)
}

// -------------------------------------------------------------------

// GetFriendsResponse

// repeated .pbmsg.Friend friends = 1;
inline int GetFriendsResponse::friends_size() const {
  return friends_.size();
}
inline void GetFriendsResponse::clear_friends() {
  friends_.Clear();
}
inline ::pbmsg::Friend* GetFriendsResponse::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:pbmsg.GetFriendsResponse.friends)
  return friends_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >*
GetFriendsResponse::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:pbmsg.GetFriendsResponse.friends)
  return &friends_;
}
inline const ::pbmsg::Friend& GetFriendsResponse::friends(int index) const {
  // @@protoc_insertion_point(field_get:pbmsg.GetFriendsResponse.friends)
  return friends_.Get(index);
}
inline ::pbmsg::Friend* GetFriendsResponse::add_friends() {
  // @@protoc_insertion_point(field_add:pbmsg.GetFriendsResponse.friends)
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >&
GetFriendsResponse::friends() const {
  // @@protoc_insertion_point(field_list:pbmsg.GetFriendsResponse.friends)
  return friends_;
}

// -------------------------------------------------------------------

// SendMessageRequest

// optional bytes receiver = 1;
inline bool SendMessageRequest::has_receiver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMessageRequest::set_has_receiver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMessageRequest::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMessageRequest::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receiver();
}
inline const ::std::string& SendMessageRequest::receiver() const {
  // @@protoc_insertion_point(field_get:pbmsg.SendMessageRequest.receiver)
  return receiver_.GetNoArena();
}
inline void SendMessageRequest::set_receiver(const ::std::string& value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.SendMessageRequest.receiver)
}
#if LANG_CXX11
inline void SendMessageRequest::set_receiver(::std::string&& value) {
  set_has_receiver();
  receiver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.SendMessageRequest.receiver)
}
#endif
inline void SendMessageRequest::set_receiver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.SendMessageRequest.receiver)
}
inline void SendMessageRequest::set_receiver(const void* value, size_t size) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.SendMessageRequest.receiver)
}
inline ::std::string* SendMessageRequest::mutable_receiver() {
  set_has_receiver();
  // @@protoc_insertion_point(field_mutable:pbmsg.SendMessageRequest.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageRequest::release_receiver() {
  // @@protoc_insertion_point(field_release:pbmsg.SendMessageRequest.receiver)
  if (!has_receiver()) {
    return NULL;
  }
  clear_has_receiver();
  return receiver_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRequest::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    set_has_receiver();
  } else {
    clear_has_receiver();
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.SendMessageRequest.receiver)
}

// required bytes text = 2;
inline bool SendMessageRequest::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMessageRequest::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMessageRequest::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMessageRequest::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& SendMessageRequest::text() const {
  // @@protoc_insertion_point(field_get:pbmsg.SendMessageRequest.text)
  return text_.GetNoArena();
}
inline void SendMessageRequest::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.SendMessageRequest.text)
}
#if LANG_CXX11
inline void SendMessageRequest::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.SendMessageRequest.text)
}
#endif
inline void SendMessageRequest::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.SendMessageRequest.text)
}
inline void SendMessageRequest::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.SendMessageRequest.text)
}
inline ::std::string* SendMessageRequest::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pbmsg.SendMessageRequest.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageRequest::release_text() {
  // @@protoc_insertion_point(field_release:pbmsg.SendMessageRequest.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRequest::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.SendMessageRequest.text)
}

// -------------------------------------------------------------------

// FriendNotification

// required bytes name = 1;
inline bool FriendNotification::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendNotification::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendNotification::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendNotification::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FriendNotification::name() const {
  // @@protoc_insertion_point(field_get:pbmsg.FriendNotification.name)
  return name_.GetNoArena();
}
inline void FriendNotification::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.FriendNotification.name)
}
#if LANG_CXX11
inline void FriendNotification::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.FriendNotification.name)
}
#endif
inline void FriendNotification::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.FriendNotification.name)
}
inline void FriendNotification::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.FriendNotification.name)
}
inline ::std::string* FriendNotification::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pbmsg.FriendNotification.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendNotification::release_name() {
  // @@protoc_insertion_point(field_release:pbmsg.FriendNotification.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendNotification::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.FriendNotification.name)
}

// optional bool online = 2;
inline bool FriendNotification::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendNotification::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendNotification::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendNotification::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool FriendNotification::online() const {
  // @@protoc_insertion_point(field_get:pbmsg.FriendNotification.online)
  return online_;
}
inline void FriendNotification::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.FriendNotification.online)
}

// -------------------------------------------------------------------

// MessageNotification

// required bytes sender = 1;
inline bool MessageNotification::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageNotification::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageNotification::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageNotification::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender();
}
inline const ::std::string& MessageNotification::sender() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNotification.sender)
  return sender_.GetNoArena();
}
inline void MessageNotification::set_sender(const ::std::string& value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNotification.sender)
}
#if LANG_CXX11
inline void MessageNotification::set_sender(::std::string&& value) {
  set_has_sender();
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.MessageNotification.sender)
}
#endif
inline void MessageNotification::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNotification.sender)
}
inline void MessageNotification::set_sender(const void* value, size_t size) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNotification.sender)
}
inline ::std::string* MessageNotification::mutable_sender() {
  set_has_sender();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNotification.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageNotification::release_sender() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNotification.sender)
  if (!has_sender()) {
    return NULL;
  }
  clear_has_sender();
  return sender_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNotification::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    set_has_sender();
  } else {
    clear_has_sender();
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNotification.sender)
}

// required bytes text = 2;
inline bool MessageNotification::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageNotification::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageNotification::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageNotification::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& MessageNotification::text() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNotification.text)
  return text_.GetNoArena();
}
inline void MessageNotification::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNotification.text)
}
#if LANG_CXX11
inline void MessageNotification::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.MessageNotification.text)
}
#endif
inline void MessageNotification::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNotification.text)
}
inline void MessageNotification::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNotification.text)
}
inline ::std::string* MessageNotification::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNotification.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageNotification::release_text() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNotification.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNotification::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNotification.text)
}

// required string timestamp = 3;
inline bool MessageNotification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageNotification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageNotification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageNotification::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
inline const ::std::string& MessageNotification::timestamp() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNotification.timestamp)
  return timestamp_.GetNoArena();
}
inline void MessageNotification::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNotification.timestamp)
}
#if LANG_CXX11
inline void MessageNotification::set_timestamp(::std::string&& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.MessageNotification.timestamp)
}
#endif
inline void MessageNotification::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNotification.timestamp)
}
inline void MessageNotification::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNotification.timestamp)
}
inline ::std::string* MessageNotification::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNotification.timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageNotification::release_timestamp() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNotification.timestamp)
  if (!has_timestamp()) {
    return NULL;
  }
  clear_has_timestamp();
  return timestamp_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNotification::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNotification.timestamp)
}

// -------------------------------------------------------------------

// WelcomeNotification

// required bytes text = 1;
inline bool WelcomeNotification::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelcomeNotification::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelcomeNotification::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelcomeNotification::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& WelcomeNotification::text() const {
  // @@protoc_insertion_point(field_get:pbmsg.WelcomeNotification.text)
  return text_.GetNoArena();
}
inline void WelcomeNotification::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.WelcomeNotification.text)
}
#if LANG_CXX11
inline void WelcomeNotification::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.WelcomeNotification.text)
}
#endif
inline void WelcomeNotification::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.WelcomeNotification.text)
}
inline void WelcomeNotification::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.WelcomeNotification.text)
}
inline ::std::string* WelcomeNotification::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pbmsg.WelcomeNotification.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WelcomeNotification::release_text() {
  // @@protoc_insertion_point(field_release:pbmsg.WelcomeNotification.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WelcomeNotification::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.WelcomeNotification.text)
}

// -------------------------------------------------------------------

// Request

// optional .pbmsg.LoginRequest login = 1;
inline bool Request::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_login() {
  if (login_ != NULL) login_->Clear();
  clear_has_login();
}
inline const ::pbmsg::LoginRequest& Request::_internal_login() const {
  return *login_;
}
inline const ::pbmsg::LoginRequest& Request::login() const {
  const ::pbmsg::LoginRequest* p = login_;
  // @@protoc_insertion_point(field_get:pbmsg.Request.login)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::LoginRequest*>(
      &::pbmsg::_LoginRequest_default_instance_);
}
inline ::pbmsg::LoginRequest* Request::release_login() {
  // @@protoc_insertion_point(field_release:pbmsg.Request.login)
  clear_has_login();
  ::pbmsg::LoginRequest* temp = login_;
  login_ = NULL;
  return temp;
}
inline ::pbmsg::LoginRequest* Request::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::LoginRequest>(GetArenaNoVirtual());
    login_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Request.login)
  return login_;
}
inline void Request::set_allocated_login(::pbmsg::LoginRequest* login) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete login_;
  }
  if (login) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login, submessage_arena);
    }
    set_has_login();
  } else {
    clear_has_login();
  }
  login_ = login;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Request.login)
}

// optional .pbmsg.SendMessageRequest send_message = 2;
inline bool Request::has_send_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_send_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_send_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_send_message() {
  if (send_message_ != NULL) send_message_->Clear();
  clear_has_send_message();
}
inline const ::pbmsg::SendMessageRequest& Request::_internal_send_message() const {
  return *send_message_;
}
inline const ::pbmsg::SendMessageRequest& Request::send_message() const {
  const ::pbmsg::SendMessageRequest* p = send_message_;
  // @@protoc_insertion_point(field_get:pbmsg.Request.send_message)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::SendMessageRequest*>(
      &::pbmsg::_SendMessageRequest_default_instance_);
}
inline ::pbmsg::SendMessageRequest* Request::release_send_message() {
  // @@protoc_insertion_point(field_release:pbmsg.Request.send_message)
  clear_has_send_message();
  ::pbmsg::SendMessageRequest* temp = send_message_;
  send_message_ = NULL;
  return temp;
}
inline ::pbmsg::SendMessageRequest* Request::mutable_send_message() {
  set_has_send_message();
  if (send_message_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::SendMessageRequest>(GetArenaNoVirtual());
    send_message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Request.send_message)
  return send_message_;
}
inline void Request::set_allocated_send_message(::pbmsg::SendMessageRequest* send_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete send_message_;
  }
  if (send_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      send_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, send_message, submessage_arena);
    }
    set_has_send_message();
  } else {
    clear_has_send_message();
  }
  send_message_ = send_message;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Request.send_message)
}

// -------------------------------------------------------------------

// Response

// required bool result = 1;
inline bool Response::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool Response::result() const {
  // @@protoc_insertion_point(field_get:pbmsg.Response.result)
  return result_;
}
inline void Response::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Response.result)
}

// required bool last_response = 2;
inline bool Response::has_last_response() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Response::set_has_last_response() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Response::clear_has_last_response() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Response::clear_last_response() {
  last_response_ = false;
  clear_has_last_response();
}
inline bool Response::last_response() const {
  // @@protoc_insertion_point(field_get:pbmsg.Response.last_response)
  return last_response_;
}
inline void Response::set_last_response(bool value) {
  set_has_last_response();
  last_response_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Response.last_response)
}

// optional bytes error_describe = 3;
inline bool Response::has_error_describe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_error_describe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_error_describe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_error_describe() {
  error_describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_describe();
}
inline const ::std::string& Response::error_describe() const {
  // @@protoc_insertion_point(field_get:pbmsg.Response.error_describe)
  return error_describe_.GetNoArena();
}
inline void Response::set_error_describe(const ::std::string& value) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.Response.error_describe)
}
#if LANG_CXX11
inline void Response::set_error_describe(::std::string&& value) {
  set_has_error_describe();
  error_describe_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pbmsg.Response.error_describe)
}
#endif
inline void Response::set_error_describe(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.Response.error_describe)
}
inline void Response::set_error_describe(const void* value, size_t size) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.Response.error_describe)
}
inline ::std::string* Response::mutable_error_describe() {
  set_has_error_describe();
  // @@protoc_insertion_point(field_mutable:pbmsg.Response.error_describe)
  return error_describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_error_describe() {
  // @@protoc_insertion_point(field_release:pbmsg.Response.error_describe)
  if (!has_error_describe()) {
    return NULL;
  }
  clear_has_error_describe();
  return error_describe_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_error_describe(::std::string* error_describe) {
  if (error_describe != NULL) {
    set_has_error_describe();
  } else {
    clear_has_error_describe();
  }
  error_describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_describe);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Response.error_describe)
}

// optional .pbmsg.LoginResponse login = 4;
inline bool Response::has_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_login() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_login() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_login() {
  if (login_ != NULL) login_->Clear();
  clear_has_login();
}
inline const ::pbmsg::LoginResponse& Response::_internal_login() const {
  return *login_;
}
inline const ::pbmsg::LoginResponse& Response::login() const {
  const ::pbmsg::LoginResponse* p = login_;
  // @@protoc_insertion_point(field_get:pbmsg.Response.login)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::LoginResponse*>(
      &::pbmsg::_LoginResponse_default_instance_);
}
inline ::pbmsg::LoginResponse* Response::release_login() {
  // @@protoc_insertion_point(field_release:pbmsg.Response.login)
  clear_has_login();
  ::pbmsg::LoginResponse* temp = login_;
  login_ = NULL;
  return temp;
}
inline ::pbmsg::LoginResponse* Response::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::LoginResponse>(GetArenaNoVirtual());
    login_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Response.login)
  return login_;
}
inline void Response::set_allocated_login(::pbmsg::LoginResponse* login) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete login_;
  }
  if (login) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login, submessage_arena);
    }
    set_has_login();
  } else {
    clear_has_login();
  }
  login_ = login;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Response.login)
}

// optional .pbmsg.GetFriendsResponse get_friends = 5;
inline bool Response::has_get_friends() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_get_friends() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_get_friends() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_get_friends() {
  if (get_friends_ != NULL) get_friends_->Clear();
  clear_has_get_friends();
}
inline const ::pbmsg::GetFriendsResponse& Response::_internal_get_friends() const {
  return *get_friends_;
}
inline const ::pbmsg::GetFriendsResponse& Response::get_friends() const {
  const ::pbmsg::GetFriendsResponse* p = get_friends_;
  // @@protoc_insertion_point(field_get:pbmsg.Response.get_friends)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::GetFriendsResponse*>(
      &::pbmsg::_GetFriendsResponse_default_instance_);
}
inline ::pbmsg::GetFriendsResponse* Response::release_get_friends() {
  // @@protoc_insertion_point(field_release:pbmsg.Response.get_friends)
  clear_has_get_friends();
  ::pbmsg::GetFriendsResponse* temp = get_friends_;
  get_friends_ = NULL;
  return temp;
}
inline ::pbmsg::GetFriendsResponse* Response::mutable_get_friends() {
  set_has_get_friends();
  if (get_friends_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::GetFriendsResponse>(GetArenaNoVirtual());
    get_friends_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Response.get_friends)
  return get_friends_;
}
inline void Response::set_allocated_get_friends(::pbmsg::GetFriendsResponse* get_friends) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete get_friends_;
  }
  if (get_friends) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_friends = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_friends, submessage_arena);
    }
    set_has_get_friends();
  } else {
    clear_has_get_friends();
  }
  get_friends_ = get_friends;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Response.get_friends)
}

// -------------------------------------------------------------------

// Notification

// optional .pbmsg.FriendNotification friend = 1;
inline bool Notification::has_friend_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Notification::set_has_friend_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Notification::clear_has_friend_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Notification::clear_friend_() {
  if (friend__ != NULL) friend__->Clear();
  clear_has_friend_();
}
inline const ::pbmsg::FriendNotification& Notification::_internal_friend_() const {
  return *friend__;
}
inline const ::pbmsg::FriendNotification& Notification::friend_() const {
  const ::pbmsg::FriendNotification* p = friend__;
  // @@protoc_insertion_point(field_get:pbmsg.Notification.friend)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::FriendNotification*>(
      &::pbmsg::_FriendNotification_default_instance_);
}
inline ::pbmsg::FriendNotification* Notification::release_friend_() {
  // @@protoc_insertion_point(field_release:pbmsg.Notification.friend)
  clear_has_friend_();
  ::pbmsg::FriendNotification* temp = friend__;
  friend__ = NULL;
  return temp;
}
inline ::pbmsg::FriendNotification* Notification::mutable_friend_() {
  set_has_friend_();
  if (friend__ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::FriendNotification>(GetArenaNoVirtual());
    friend__ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Notification.friend)
  return friend__;
}
inline void Notification::set_allocated_friend_(::pbmsg::FriendNotification* friend_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete friend__;
  }
  if (friend_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      friend_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, friend_, submessage_arena);
    }
    set_has_friend_();
  } else {
    clear_has_friend_();
  }
  friend__ = friend_;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Notification.friend)
}

// optional .pbmsg.MessageNotification msg = 2;
inline bool Notification::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Notification::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Notification::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Notification::clear_msg() {
  if (msg_ != NULL) msg_->Clear();
  clear_has_msg();
}
inline const ::pbmsg::MessageNotification& Notification::_internal_msg() const {
  return *msg_;
}
inline const ::pbmsg::MessageNotification& Notification::msg() const {
  const ::pbmsg::MessageNotification* p = msg_;
  // @@protoc_insertion_point(field_get:pbmsg.Notification.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::MessageNotification*>(
      &::pbmsg::_MessageNotification_default_instance_);
}
inline ::pbmsg::MessageNotification* Notification::release_msg() {
  // @@protoc_insertion_point(field_release:pbmsg.Notification.msg)
  clear_has_msg();
  ::pbmsg::MessageNotification* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::pbmsg::MessageNotification* Notification::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::MessageNotification>(GetArenaNoVirtual());
    msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Notification.msg)
  return msg_;
}
inline void Notification::set_allocated_msg(::pbmsg::MessageNotification* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Notification.msg)
}

// optional .pbmsg.WelcomeNotification welcome = 3;
inline bool Notification::has_welcome() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Notification::set_has_welcome() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Notification::clear_has_welcome() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Notification::clear_welcome() {
  if (welcome_ != NULL) welcome_->Clear();
  clear_has_welcome();
}
inline const ::pbmsg::WelcomeNotification& Notification::_internal_welcome() const {
  return *welcome_;
}
inline const ::pbmsg::WelcomeNotification& Notification::welcome() const {
  const ::pbmsg::WelcomeNotification* p = welcome_;
  // @@protoc_insertion_point(field_get:pbmsg.Notification.welcome)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::WelcomeNotification*>(
      &::pbmsg::_WelcomeNotification_default_instance_);
}
inline ::pbmsg::WelcomeNotification* Notification::release_welcome() {
  // @@protoc_insertion_point(field_release:pbmsg.Notification.welcome)
  clear_has_welcome();
  ::pbmsg::WelcomeNotification* temp = welcome_;
  welcome_ = NULL;
  return temp;
}
inline ::pbmsg::WelcomeNotification* Notification::mutable_welcome() {
  set_has_welcome();
  if (welcome_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::WelcomeNotification>(GetArenaNoVirtual());
    welcome_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Notification.welcome)
  return welcome_;
}
inline void Notification::set_allocated_welcome(::pbmsg::WelcomeNotification* welcome) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete welcome_;
  }
  if (welcome) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      welcome = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, welcome, submessage_arena);
    }
    set_has_welcome();
  } else {
    clear_has_welcome();
  }
  welcome_ = welcome;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Notification.welcome)
}

// -------------------------------------------------------------------

// Message

// required .pbmsg.MSG msg_type = 1;
inline bool Message::has_msg_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_msg_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_msg_type() {
  msg_type_ = 10001;
  clear_has_msg_type();
}
inline ::pbmsg::MSG Message::msg_type() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.msg_type)
  return static_cast< ::pbmsg::MSG >(msg_type_);
}
inline void Message::set_msg_type(::pbmsg::MSG value) {
  assert(::pbmsg::MSG_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.msg_type)
}

// required fixed32 sequence = 2;
inline bool Message::has_sequence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_sequence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 Message::sequence() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.sequence)
  return sequence_;
}
inline void Message::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.sequence)
}

// optional fixed32 session_id = 3;
inline bool Message::has_session_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_session_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 Message::session_id() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.session_id)
  return session_id_;
}
inline void Message::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.session_id)
}

// optional .pbmsg.Request request = 4;
inline bool Message::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_request() {
  if (request_ != NULL) request_->Clear();
  clear_has_request();
}
inline const ::pbmsg::Request& Message::_internal_request() const {
  return *request_;
}
inline const ::pbmsg::Request& Message::request() const {
  const ::pbmsg::Request* p = request_;
  // @@protoc_insertion_point(field_get:pbmsg.Message.request)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::Request*>(
      &::pbmsg::_Request_default_instance_);
}
inline ::pbmsg::Request* Message::release_request() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.request)
  clear_has_request();
  ::pbmsg::Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::pbmsg::Request* Message::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::Request>(GetArenaNoVirtual());
    request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.request)
  return request_;
}
inline void Message::set_allocated_request(::pbmsg::Request* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    set_has_request();
  } else {
    clear_has_request();
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.request)
}

// optional .pbmsg.Response response = 5;
inline bool Message::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_response() {
  if (response_ != NULL) response_->Clear();
  clear_has_response();
}
inline const ::pbmsg::Response& Message::_internal_response() const {
  return *response_;
}
inline const ::pbmsg::Response& Message::response() const {
  const ::pbmsg::Response* p = response_;
  // @@protoc_insertion_point(field_get:pbmsg.Message.response)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::Response*>(
      &::pbmsg::_Response_default_instance_);
}
inline ::pbmsg::Response* Message::release_response() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.response)
  clear_has_response();
  ::pbmsg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline ::pbmsg::Response* Message::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::Response>(GetArenaNoVirtual());
    response_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.response)
  return response_;
}
inline void Message::set_allocated_response(::pbmsg::Response* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete response_;
  }
  if (response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    set_has_response();
  } else {
    clear_has_response();
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.response)
}

// optional .pbmsg.Notification notification = 6;
inline bool Message::has_notification() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_notification() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_notification() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_notification() {
  if (notification_ != NULL) notification_->Clear();
  clear_has_notification();
}
inline const ::pbmsg::Notification& Message::_internal_notification() const {
  return *notification_;
}
inline const ::pbmsg::Notification& Message::notification() const {
  const ::pbmsg::Notification* p = notification_;
  // @@protoc_insertion_point(field_get:pbmsg.Message.notification)
  return p != NULL ? *p : *reinterpret_cast<const ::pbmsg::Notification*>(
      &::pbmsg::_Notification_default_instance_);
}
inline ::pbmsg::Notification* Message::release_notification() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.notification)
  clear_has_notification();
  ::pbmsg::Notification* temp = notification_;
  notification_ = NULL;
  return temp;
}
inline ::pbmsg::Notification* Message::mutable_notification() {
  set_has_notification();
  if (notification_ == NULL) {
    auto* p = CreateMaybeMessage<::pbmsg::Notification>(GetArenaNoVirtual());
    notification_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.notification)
  return notification_;
}
inline void Message::set_allocated_notification(::pbmsg::Notification* notification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete notification_;
  }
  if (notification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      notification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, notification, submessage_arena);
    }
    set_has_notification();
  } else {
    clear_has_notification();
  }
  notification_ = notification;
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.notification)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pbmsg::MSG> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pbmsg::MSG>() {
  return ::pbmsg::MSG_descriptor();
}
template <> struct is_proto_enum< ::pbmsg::ERR_CODE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pbmsg::ERR_CODE>() {
  return ::pbmsg::ERR_CODE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Message_2eproto

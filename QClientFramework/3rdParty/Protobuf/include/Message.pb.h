// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_Message_2eproto__INCLUDED
#define PROTOBUF_Message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pbmsg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Message_2eproto();
void protobuf_AssignDesc_Message_2eproto();
void protobuf_ShutdownFile_Message_2eproto();

class ClientMsg;
class Friend;
class GetFriendsRs;
class HeartbeatNt;
class LoginRq;
class LoginRs;
class Message;
class MessageNt;
class Notify;
class Request;
class Respond;
class RespondMsg;
class SendMessageRq;

enum EMsg {
  ELoginRq = 10001,
  ELoginRs = 10002,
  ELogoutRq = 10003,
  ELogoutRs = 10004,
  EGetFriendsRq = 10007,
  EGetFriendsRs = 10008,
  ESendMessageRq = 10009,
  ESendMessageRs = 10010,
  EHeartbeatNt = 20001,
  EMessageNt = 20002
};
bool EMsg_IsValid(int value);
const EMsg EMsg_MIN = ELoginRq;
const EMsg EMsg_MAX = EMessageNt;
const int EMsg_ARRAYSIZE = EMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMsg_descriptor();
inline const ::std::string& EMsg_Name(EMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMsg_descriptor(), value);
}
inline bool EMsg_Parse(
    const ::std::string& name, EMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMsg>(
    EMsg_descriptor(), name, value);
}
enum ERR_CODE {
  CLIENT_ERR_REFUSE = 100001,
  CLIENT_ERR_ACCEPT = 100002,
  SERVER1_ERR_STOP = 200001,
  SERVER2_ERR_OVERLOAD = 300001
};
bool ERR_CODE_IsValid(int value);
const ERR_CODE ERR_CODE_MIN = CLIENT_ERR_REFUSE;
const ERR_CODE ERR_CODE_MAX = SERVER2_ERR_OVERLOAD;
const int ERR_CODE_ARRAYSIZE = ERR_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERR_CODE_descriptor();
inline const ::std::string& ERR_CODE_Name(ERR_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERR_CODE_descriptor(), value);
}
inline bool ERR_CODE_Parse(
    const ::std::string& name, ERR_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERR_CODE>(
    ERR_CODE_descriptor(), name, value);
}
// ===================================================================

class ClientMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.ClientMsg) */ {
 public:
  ClientMsg();
  virtual ~ClientMsg();

  ClientMsg(const ClientMsg& from);

  inline ClientMsg& operator=(const ClientMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMsg& default_instance();

  void Swap(ClientMsg* other);

  // implements Message ----------------------------------------------

  inline ClientMsg* New() const { return New(NULL); }

  ClientMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientMsg& from);
  void MergeFrom(const ClientMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pbmsg.EMsg msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::pbmsg::EMsg msg_type() const;
  void set_msg_type(::pbmsg::EMsg value);

  // required bytes msg_data = 2;
  bool has_msg_data() const;
  void clear_msg_data();
  static const int kMsgDataFieldNumber = 2;
  const ::std::string& msg_data() const;
  void set_msg_data(const ::std::string& value);
  void set_msg_data(const char* value);
  void set_msg_data(const void* value, size_t size);
  ::std::string* mutable_msg_data();
  ::std::string* release_msg_data();
  void set_allocated_msg_data(::std::string* msg_data);

  // @@protoc_insertion_point(class_scope:pbmsg.ClientMsg)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_data_;
  int msg_type_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static ClientMsg* default_instance_;
};
// -------------------------------------------------------------------

class LoginRq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.LoginRq) */ {
 public:
  LoginRq();
  virtual ~LoginRq();

  LoginRq(const LoginRq& from);

  inline LoginRq& operator=(const LoginRq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRq& default_instance();

  void Swap(LoginRq* other);

  // implements Message ----------------------------------------------

  inline LoginRq* New() const { return New(NULL); }

  LoginRq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRq& from);
  void MergeFrom(const LoginRq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // required bytes username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:pbmsg.LoginRq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static LoginRq* default_instance_;
};
// -------------------------------------------------------------------

class RespondMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.RespondMsg) */ {
 public:
  RespondMsg();
  virtual ~RespondMsg();

  RespondMsg(const RespondMsg& from);

  inline RespondMsg& operator=(const RespondMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RespondMsg& default_instance();

  void Swap(RespondMsg* other);

  // implements Message ----------------------------------------------

  inline RespondMsg* New() const { return New(NULL); }

  RespondMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RespondMsg& from);
  void MergeFrom(const RespondMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RespondMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // required bytes result_msg = 2;
  bool has_result_msg() const;
  void clear_result_msg();
  static const int kResultMsgFieldNumber = 2;
  const ::std::string& result_msg() const;
  void set_result_msg(const ::std::string& value);
  void set_result_msg(const char* value);
  void set_result_msg(const void* value, size_t size);
  ::std::string* mutable_result_msg();
  ::std::string* release_result_msg();
  void set_allocated_result_msg(::std::string* result_msg);

  // @@protoc_insertion_point(class_scope:pbmsg.RespondMsg)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_result_msg();
  inline void clear_has_result_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_msg_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static RespondMsg* default_instance_;
};
// -------------------------------------------------------------------

class LoginRs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.LoginRs) */ {
 public:
  LoginRs();
  virtual ~LoginRs();

  LoginRs(const LoginRs& from);

  inline LoginRs& operator=(const LoginRs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRs& default_instance();

  void Swap(LoginRs* other);

  // implements Message ----------------------------------------------

  inline LoginRs* New() const { return New(NULL); }

  LoginRs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRs& from);
  void MergeFrom(const LoginRs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 ttl = 1;
  bool has_ttl() const;
  void clear_ttl();
  static const int kTtlFieldNumber = 1;
  ::google::protobuf::uint32 ttl() const;
  void set_ttl(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbmsg.LoginRs)
 private:
  inline void set_has_ttl();
  inline void clear_has_ttl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ttl_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static LoginRs* default_instance_;
};
// -------------------------------------------------------------------

class Friend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Friend) */ {
 public:
  Friend();
  virtual ~Friend();

  Friend(const Friend& from);

  inline Friend& operator=(const Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Friend& default_instance();

  void Swap(Friend* other);

  // implements Message ----------------------------------------------

  inline Friend* New() const { return New(NULL); }

  Friend* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Friend& from);
  void MergeFrom(const Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Friend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool online = 2;
  bool has_online() const;
  void clear_online();
  static const int kOnlineFieldNumber = 2;
  bool online() const;
  void set_online(bool value);

  // @@protoc_insertion_point(class_scope:pbmsg.Friend)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_online();
  inline void clear_has_online();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool online_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static Friend* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendsRs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.GetFriendsRs) */ {
 public:
  GetFriendsRs();
  virtual ~GetFriendsRs();

  GetFriendsRs(const GetFriendsRs& from);

  inline GetFriendsRs& operator=(const GetFriendsRs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendsRs& default_instance();

  void Swap(GetFriendsRs* other);

  // implements Message ----------------------------------------------

  inline GetFriendsRs* New() const { return New(NULL); }

  GetFriendsRs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendsRs& from);
  void MergeFrom(const GetFriendsRs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetFriendsRs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pbmsg.Friend friends = 1;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 1;
  const ::pbmsg::Friend& friends(int index) const;
  ::pbmsg::Friend* mutable_friends(int index);
  ::pbmsg::Friend* add_friends();
  ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >*
      mutable_friends();
  const ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >&
      friends() const;

  // @@protoc_insertion_point(class_scope:pbmsg.GetFriendsRs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend > friends_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static GetFriendsRs* default_instance_;
};
// -------------------------------------------------------------------

class SendMessageRq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.SendMessageRq) */ {
 public:
  SendMessageRq();
  virtual ~SendMessageRq();

  SendMessageRq(const SendMessageRq& from);

  inline SendMessageRq& operator=(const SendMessageRq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMessageRq& default_instance();

  void Swap(SendMessageRq* other);

  // implements Message ----------------------------------------------

  inline SendMessageRq* New() const { return New(NULL); }

  SendMessageRq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMessageRq& from);
  void MergeFrom(const SendMessageRq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMessageRq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes receiver = 1;
  bool has_receiver() const;
  void clear_receiver();
  static const int kReceiverFieldNumber = 1;
  const ::std::string& receiver() const;
  void set_receiver(const ::std::string& value);
  void set_receiver(const char* value);
  void set_receiver(const void* value, size_t size);
  ::std::string* mutable_receiver();
  ::std::string* release_receiver();
  void set_allocated_receiver(::std::string* receiver);

  // required bytes text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:pbmsg.SendMessageRq)
 private:
  inline void set_has_receiver();
  inline void clear_has_receiver();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr receiver_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static SendMessageRq* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatNt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.HeartbeatNt) */ {
 public:
  HeartbeatNt();
  virtual ~HeartbeatNt();

  HeartbeatNt(const HeartbeatNt& from);

  inline HeartbeatNt& operator=(const HeartbeatNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatNt& default_instance();

  void Swap(HeartbeatNt* other);

  // implements Message ----------------------------------------------

  inline HeartbeatNt* New() const { return New(NULL); }

  HeartbeatNt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatNt& from);
  void MergeFrom(const HeartbeatNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatNt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbmsg.HeartbeatNt)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatNt* default_instance_;
};
// -------------------------------------------------------------------

class MessageNt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.MessageNt) */ {
 public:
  MessageNt();
  virtual ~MessageNt();

  MessageNt(const MessageNt& from);

  inline MessageNt& operator=(const MessageNt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNt& default_instance();

  void Swap(MessageNt* other);

  // implements Message ----------------------------------------------

  inline MessageNt* New() const { return New(NULL); }

  MessageNt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageNt& from);
  void MergeFrom(const MessageNt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageNt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes sender = 1;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  void set_sender(const char* value);
  void set_sender(const void* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // required bytes text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // required string timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // @@protoc_insertion_point(class_scope:pbmsg.MessageNt)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static MessageNt* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pbmsg.LoginRq login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::pbmsg::LoginRq& login() const;
  ::pbmsg::LoginRq* mutable_login();
  ::pbmsg::LoginRq* release_login();
  void set_allocated_login(::pbmsg::LoginRq* login);

  // optional .pbmsg.SendMessageRq sendMessage = 2;
  bool has_sendmessage() const;
  void clear_sendmessage();
  static const int kSendMessageFieldNumber = 2;
  const ::pbmsg::SendMessageRq& sendmessage() const;
  ::pbmsg::SendMessageRq* mutable_sendmessage();
  ::pbmsg::SendMessageRq* release_sendmessage();
  void set_allocated_sendmessage(::pbmsg::SendMessageRq* sendmessage);

  // @@protoc_insertion_point(class_scope:pbmsg.Request)
 private:
  inline void set_has_login();
  inline void clear_has_login();
  inline void set_has_sendmessage();
  inline void clear_has_sendmessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pbmsg::LoginRq* login_;
  ::pbmsg::SendMessageRq* sendmessage_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Respond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Respond) */ {
 public:
  Respond();
  virtual ~Respond();

  Respond(const Respond& from);

  inline Respond& operator=(const Respond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Respond& default_instance();

  void Swap(Respond* other);

  // implements Message ----------------------------------------------

  inline Respond* New() const { return New(NULL); }

  Respond* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Respond& from);
  void MergeFrom(const Respond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Respond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // required bool lastRespond = 2;
  bool has_lastrespond() const;
  void clear_lastrespond();
  static const int kLastRespondFieldNumber = 2;
  bool lastrespond() const;
  void set_lastrespond(bool value);

  // optional bytes errorDescribe = 3;
  bool has_errordescribe() const;
  void clear_errordescribe();
  static const int kErrorDescribeFieldNumber = 3;
  const ::std::string& errordescribe() const;
  void set_errordescribe(const ::std::string& value);
  void set_errordescribe(const char* value);
  void set_errordescribe(const void* value, size_t size);
  ::std::string* mutable_errordescribe();
  ::std::string* release_errordescribe();
  void set_allocated_errordescribe(::std::string* errordescribe);

  // optional .pbmsg.LoginRs login = 4;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 4;
  const ::pbmsg::LoginRs& login() const;
  ::pbmsg::LoginRs* mutable_login();
  ::pbmsg::LoginRs* release_login();
  void set_allocated_login(::pbmsg::LoginRs* login);

  // optional .pbmsg.GetFriendsRs friends = 5;
  bool has_friends() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 5;
  const ::pbmsg::GetFriendsRs& friends() const;
  ::pbmsg::GetFriendsRs* mutable_friends();
  ::pbmsg::GetFriendsRs* release_friends();
  void set_allocated_friends(::pbmsg::GetFriendsRs* friends);

  // @@protoc_insertion_point(class_scope:pbmsg.Respond)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_lastrespond();
  inline void clear_has_lastrespond();
  inline void set_has_errordescribe();
  inline void clear_has_errordescribe();
  inline void set_has_login();
  inline void clear_has_login();
  inline void set_has_friends();
  inline void clear_has_friends();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errordescribe_;
  ::pbmsg::LoginRs* login_;
  ::pbmsg::GetFriendsRs* friends_;
  bool result_;
  bool lastrespond_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static Respond* default_instance_;
};
// -------------------------------------------------------------------

class Notify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Notify) */ {
 public:
  Notify();
  virtual ~Notify();

  Notify(const Notify& from);

  inline Notify& operator=(const Notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notify& default_instance();

  void Swap(Notify* other);

  // implements Message ----------------------------------------------

  inline Notify* New() const { return New(NULL); }

  Notify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Notify& from);
  void MergeFrom(const Notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Notify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pbmsg.HeartbeatNt heartbeat = 1;
  bool has_heartbeat() const;
  void clear_heartbeat();
  static const int kHeartbeatFieldNumber = 1;
  const ::pbmsg::HeartbeatNt& heartbeat() const;
  ::pbmsg::HeartbeatNt* mutable_heartbeat();
  ::pbmsg::HeartbeatNt* release_heartbeat();
  void set_allocated_heartbeat(::pbmsg::HeartbeatNt* heartbeat);

  // optional .pbmsg.MessageNt message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::pbmsg::MessageNt& message() const;
  ::pbmsg::MessageNt* mutable_message();
  ::pbmsg::MessageNt* release_message();
  void set_allocated_message(::pbmsg::MessageNt* message);

  // @@protoc_insertion_point(class_scope:pbmsg.Notify)
 private:
  inline void set_has_heartbeat();
  inline void clear_has_heartbeat();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pbmsg::HeartbeatNt* heartbeat_;
  ::pbmsg::MessageNt* message_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static Notify* default_instance_;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pbmsg.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pbmsg.EMsg msgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::pbmsg::EMsg msgtype() const;
  void set_msgtype(::pbmsg::EMsg value);

  // required fixed32 sequence = 2;
  bool has_sequence() const;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::uint32 sequence() const;
  void set_sequence(::google::protobuf::uint32 value);

  // optional fixed32 sessionId = 3;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 sessionid() const;
  void set_sessionid(::google::protobuf::uint32 value);

  // optional .pbmsg.Request request = 4;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 4;
  const ::pbmsg::Request& request() const;
  ::pbmsg::Request* mutable_request();
  ::pbmsg::Request* release_request();
  void set_allocated_request(::pbmsg::Request* request);

  // optional .pbmsg.Respond respond = 5;
  bool has_respond() const;
  void clear_respond();
  static const int kRespondFieldNumber = 5;
  const ::pbmsg::Respond& respond() const;
  ::pbmsg::Respond* mutable_respond();
  ::pbmsg::Respond* release_respond();
  void set_allocated_respond(::pbmsg::Respond* respond);

  // optional .pbmsg.Notify notify = 6;
  bool has_notify() const;
  void clear_notify();
  static const int kNotifyFieldNumber = 6;
  const ::pbmsg::Notify& notify() const;
  ::pbmsg::Notify* mutable_notify();
  ::pbmsg::Notify* release_notify();
  void set_allocated_notify(::pbmsg::Notify* notify);

  // @@protoc_insertion_point(class_scope:pbmsg.Message)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_respond();
  inline void clear_has_respond();
  inline void set_has_notify();
  inline void clear_has_notify();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  ::google::protobuf::uint32 sequence_;
  ::pbmsg::Request* request_;
  ::pbmsg::Respond* respond_;
  ::pbmsg::Notify* notify_;
  ::google::protobuf::uint32 sessionid_;
  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientMsg

// required .pbmsg.EMsg msg_type = 1;
inline bool ClientMsg::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMsg::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMsg::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMsg::clear_msg_type() {
  msg_type_ = 10001;
  clear_has_msg_type();
}
inline ::pbmsg::EMsg ClientMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:pbmsg.ClientMsg.msg_type)
  return static_cast< ::pbmsg::EMsg >(msg_type_);
}
inline void ClientMsg::set_msg_type(::pbmsg::EMsg value) {
  assert(::pbmsg::EMsg_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.ClientMsg.msg_type)
}

// required bytes msg_data = 2;
inline bool ClientMsg::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMsg::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMsg::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMsg::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_data();
}
inline const ::std::string& ClientMsg::msg_data() const {
  // @@protoc_insertion_point(field_get:pbmsg.ClientMsg.msg_data)
  return msg_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMsg::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.ClientMsg.msg_data)
}
inline void ClientMsg::set_msg_data(const char* value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.ClientMsg.msg_data)
}
inline void ClientMsg::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.ClientMsg.msg_data)
}
inline ::std::string* ClientMsg::mutable_msg_data() {
  set_has_msg_data();
  // @@protoc_insertion_point(field_mutable:pbmsg.ClientMsg.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMsg::release_msg_data() {
  // @@protoc_insertion_point(field_release:pbmsg.ClientMsg.msg_data)
  clear_has_msg_data();
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMsg::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    set_has_msg_data();
  } else {
    clear_has_msg_data();
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.ClientMsg.msg_data)
}

// -------------------------------------------------------------------

// LoginRq

// required uint32 user_id = 1;
inline bool LoginRq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 LoginRq::user_id() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRq.user_id)
  return user_id_;
}
inline void LoginRq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.LoginRq.user_id)
}

// required bytes username = 2;
inline bool LoginRq::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRq::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRq::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LoginRq::username() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.LoginRq.username)
}
inline void LoginRq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.LoginRq.username)
}
inline void LoginRq::set_username(const void* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.LoginRq.username)
}
inline ::std::string* LoginRq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:pbmsg.LoginRq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRq::release_username() {
  // @@protoc_insertion_point(field_release:pbmsg.LoginRq.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.LoginRq.username)
}

// optional string password = 3;
inline bool LoginRq::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRq::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRq::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LoginRq::password() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.LoginRq.password)
}
inline void LoginRq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.LoginRq.password)
}
inline void LoginRq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.LoginRq.password)
}
inline ::std::string* LoginRq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:pbmsg.LoginRq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRq::release_password() {
  // @@protoc_insertion_point(field_release:pbmsg.LoginRq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.LoginRq.password)
}

// -------------------------------------------------------------------

// RespondMsg

// required int32 result = 1;
inline bool RespondMsg::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RespondMsg::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RespondMsg::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RespondMsg::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 RespondMsg::result() const {
  // @@protoc_insertion_point(field_get:pbmsg.RespondMsg.result)
  return result_;
}
inline void RespondMsg::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.RespondMsg.result)
}

// required bytes result_msg = 2;
inline bool RespondMsg::has_result_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RespondMsg::set_has_result_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RespondMsg::clear_has_result_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RespondMsg::clear_result_msg() {
  result_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result_msg();
}
inline const ::std::string& RespondMsg::result_msg() const {
  // @@protoc_insertion_point(field_get:pbmsg.RespondMsg.result_msg)
  return result_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RespondMsg::set_result_msg(const ::std::string& value) {
  set_has_result_msg();
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.RespondMsg.result_msg)
}
inline void RespondMsg::set_result_msg(const char* value) {
  set_has_result_msg();
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.RespondMsg.result_msg)
}
inline void RespondMsg::set_result_msg(const void* value, size_t size) {
  set_has_result_msg();
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.RespondMsg.result_msg)
}
inline ::std::string* RespondMsg::mutable_result_msg() {
  set_has_result_msg();
  // @@protoc_insertion_point(field_mutable:pbmsg.RespondMsg.result_msg)
  return result_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RespondMsg::release_result_msg() {
  // @@protoc_insertion_point(field_release:pbmsg.RespondMsg.result_msg)
  clear_has_result_msg();
  return result_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RespondMsg::set_allocated_result_msg(::std::string* result_msg) {
  if (result_msg != NULL) {
    set_has_result_msg();
  } else {
    clear_has_result_msg();
  }
  result_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_msg);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.RespondMsg.result_msg)
}

// -------------------------------------------------------------------

// LoginRs

// required fixed32 ttl = 1;
inline bool LoginRs::has_ttl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRs::set_has_ttl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRs::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRs::clear_ttl() {
  ttl_ = 0u;
  clear_has_ttl();
}
inline ::google::protobuf::uint32 LoginRs::ttl() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRs.ttl)
  return ttl_;
}
inline void LoginRs::set_ttl(::google::protobuf::uint32 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.LoginRs.ttl)
}

// -------------------------------------------------------------------

// Friend

// required bytes name = 1;
inline bool Friend::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Friend::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Friend::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Friend::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Friend::name() const {
  // @@protoc_insertion_point(field_get:pbmsg.Friend.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Friend::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.Friend.name)
}
inline void Friend::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.Friend.name)
}
inline void Friend::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.Friend.name)
}
inline ::std::string* Friend::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pbmsg.Friend.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Friend::release_name() {
  // @@protoc_insertion_point(field_release:pbmsg.Friend.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Friend::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Friend.name)
}

// optional bool online = 2;
inline bool Friend::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Friend::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Friend::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Friend::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool Friend::online() const {
  // @@protoc_insertion_point(field_get:pbmsg.Friend.online)
  return online_;
}
inline void Friend::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Friend.online)
}

// -------------------------------------------------------------------

// GetFriendsRs

// repeated .pbmsg.Friend friends = 1;
inline int GetFriendsRs::friends_size() const {
  return friends_.size();
}
inline void GetFriendsRs::clear_friends() {
  friends_.Clear();
}
inline const ::pbmsg::Friend& GetFriendsRs::friends(int index) const {
  // @@protoc_insertion_point(field_get:pbmsg.GetFriendsRs.friends)
  return friends_.Get(index);
}
inline ::pbmsg::Friend* GetFriendsRs::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:pbmsg.GetFriendsRs.friends)
  return friends_.Mutable(index);
}
inline ::pbmsg::Friend* GetFriendsRs::add_friends() {
  // @@protoc_insertion_point(field_add:pbmsg.GetFriendsRs.friends)
  return friends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >*
GetFriendsRs::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:pbmsg.GetFriendsRs.friends)
  return &friends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >&
GetFriendsRs::friends() const {
  // @@protoc_insertion_point(field_list:pbmsg.GetFriendsRs.friends)
  return friends_;
}

// -------------------------------------------------------------------

// SendMessageRq

// optional bytes receiver = 1;
inline bool SendMessageRq::has_receiver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMessageRq::set_has_receiver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMessageRq::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMessageRq::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receiver();
}
inline const ::std::string& SendMessageRq::receiver() const {
  // @@protoc_insertion_point(field_get:pbmsg.SendMessageRq.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRq::set_receiver(const ::std::string& value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.SendMessageRq.receiver)
}
inline void SendMessageRq::set_receiver(const char* value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.SendMessageRq.receiver)
}
inline void SendMessageRq::set_receiver(const void* value, size_t size) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.SendMessageRq.receiver)
}
inline ::std::string* SendMessageRq::mutable_receiver() {
  set_has_receiver();
  // @@protoc_insertion_point(field_mutable:pbmsg.SendMessageRq.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageRq::release_receiver() {
  // @@protoc_insertion_point(field_release:pbmsg.SendMessageRq.receiver)
  clear_has_receiver();
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRq::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    set_has_receiver();
  } else {
    clear_has_receiver();
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.SendMessageRq.receiver)
}

// required bytes text = 2;
inline bool SendMessageRq::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMessageRq::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMessageRq::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMessageRq::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& SendMessageRq::text() const {
  // @@protoc_insertion_point(field_get:pbmsg.SendMessageRq.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRq::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.SendMessageRq.text)
}
inline void SendMessageRq::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.SendMessageRq.text)
}
inline void SendMessageRq::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.SendMessageRq.text)
}
inline ::std::string* SendMessageRq::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pbmsg.SendMessageRq.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageRq::release_text() {
  // @@protoc_insertion_point(field_release:pbmsg.SendMessageRq.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRq::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.SendMessageRq.text)
}

// -------------------------------------------------------------------

// HeartbeatNt

// required uint32 user_id = 1;
inline bool HeartbeatNt::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatNt::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatNt::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatNt::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 HeartbeatNt::user_id() const {
  // @@protoc_insertion_point(field_get:pbmsg.HeartbeatNt.user_id)
  return user_id_;
}
inline void HeartbeatNt::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.HeartbeatNt.user_id)
}

// -------------------------------------------------------------------

// MessageNt

// required bytes sender = 1;
inline bool MessageNt::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageNt::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageNt::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageNt::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender();
}
inline const ::std::string& MessageNt::sender() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNt.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNt::set_sender(const ::std::string& value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNt.sender)
}
inline void MessageNt::set_sender(const char* value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNt.sender)
}
inline void MessageNt::set_sender(const void* value, size_t size) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNt.sender)
}
inline ::std::string* MessageNt::mutable_sender() {
  set_has_sender();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNt.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageNt::release_sender() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNt.sender)
  clear_has_sender();
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNt::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    set_has_sender();
  } else {
    clear_has_sender();
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNt.sender)
}

// required bytes text = 2;
inline bool MessageNt::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageNt::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageNt::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageNt::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& MessageNt::text() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNt.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNt::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNt.text)
}
inline void MessageNt::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNt.text)
}
inline void MessageNt::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNt.text)
}
inline ::std::string* MessageNt::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNt.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageNt::release_text() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNt.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNt::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNt.text)
}

// required string timestamp = 3;
inline bool MessageNt::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageNt::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageNt::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageNt::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
inline const ::std::string& MessageNt::timestamp() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNt.timestamp)
  return timestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNt::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNt.timestamp)
}
inline void MessageNt::set_timestamp(const char* value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNt.timestamp)
}
inline void MessageNt::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNt.timestamp)
}
inline ::std::string* MessageNt::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNt.timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageNt::release_timestamp() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNt.timestamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageNt::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNt.timestamp)
}

// -------------------------------------------------------------------

// Request

// optional .pbmsg.LoginRq login = 1;
inline bool Request::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_login() {
  if (login_ != NULL) login_->::pbmsg::LoginRq::Clear();
  clear_has_login();
}
inline const ::pbmsg::LoginRq& Request::login() const {
  // @@protoc_insertion_point(field_get:pbmsg.Request.login)
  return login_ != NULL ? *login_ : *default_instance_->login_;
}
inline ::pbmsg::LoginRq* Request::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::pbmsg::LoginRq;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Request.login)
  return login_;
}
inline ::pbmsg::LoginRq* Request::release_login() {
  // @@protoc_insertion_point(field_release:pbmsg.Request.login)
  clear_has_login();
  ::pbmsg::LoginRq* temp = login_;
  login_ = NULL;
  return temp;
}
inline void Request::set_allocated_login(::pbmsg::LoginRq* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Request.login)
}

// optional .pbmsg.SendMessageRq sendMessage = 2;
inline bool Request::has_sendmessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_sendmessage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_sendmessage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_sendmessage() {
  if (sendmessage_ != NULL) sendmessage_->::pbmsg::SendMessageRq::Clear();
  clear_has_sendmessage();
}
inline const ::pbmsg::SendMessageRq& Request::sendmessage() const {
  // @@protoc_insertion_point(field_get:pbmsg.Request.sendMessage)
  return sendmessage_ != NULL ? *sendmessage_ : *default_instance_->sendmessage_;
}
inline ::pbmsg::SendMessageRq* Request::mutable_sendmessage() {
  set_has_sendmessage();
  if (sendmessage_ == NULL) {
    sendmessage_ = new ::pbmsg::SendMessageRq;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Request.sendMessage)
  return sendmessage_;
}
inline ::pbmsg::SendMessageRq* Request::release_sendmessage() {
  // @@protoc_insertion_point(field_release:pbmsg.Request.sendMessage)
  clear_has_sendmessage();
  ::pbmsg::SendMessageRq* temp = sendmessage_;
  sendmessage_ = NULL;
  return temp;
}
inline void Request::set_allocated_sendmessage(::pbmsg::SendMessageRq* sendmessage) {
  delete sendmessage_;
  sendmessage_ = sendmessage;
  if (sendmessage) {
    set_has_sendmessage();
  } else {
    clear_has_sendmessage();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Request.sendMessage)
}

// -------------------------------------------------------------------

// Respond

// required bool result = 1;
inline bool Respond::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Respond::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Respond::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Respond::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool Respond::result() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.result)
  return result_;
}
inline void Respond::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Respond.result)
}

// required bool lastRespond = 2;
inline bool Respond::has_lastrespond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Respond::set_has_lastrespond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Respond::clear_has_lastrespond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Respond::clear_lastrespond() {
  lastrespond_ = false;
  clear_has_lastrespond();
}
inline bool Respond::lastrespond() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.lastRespond)
  return lastrespond_;
}
inline void Respond::set_lastrespond(bool value) {
  set_has_lastrespond();
  lastrespond_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Respond.lastRespond)
}

// optional bytes errorDescribe = 3;
inline bool Respond::has_errordescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Respond::set_has_errordescribe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Respond::clear_has_errordescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Respond::clear_errordescribe() {
  errordescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errordescribe();
}
inline const ::std::string& Respond::errordescribe() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.errorDescribe)
  return errordescribe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Respond::set_errordescribe(const ::std::string& value) {
  set_has_errordescribe();
  errordescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.Respond.errorDescribe)
}
inline void Respond::set_errordescribe(const char* value) {
  set_has_errordescribe();
  errordescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.Respond.errorDescribe)
}
inline void Respond::set_errordescribe(const void* value, size_t size) {
  set_has_errordescribe();
  errordescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.Respond.errorDescribe)
}
inline ::std::string* Respond::mutable_errordescribe() {
  set_has_errordescribe();
  // @@protoc_insertion_point(field_mutable:pbmsg.Respond.errorDescribe)
  return errordescribe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Respond::release_errordescribe() {
  // @@protoc_insertion_point(field_release:pbmsg.Respond.errorDescribe)
  clear_has_errordescribe();
  return errordescribe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Respond::set_allocated_errordescribe(::std::string* errordescribe) {
  if (errordescribe != NULL) {
    set_has_errordescribe();
  } else {
    clear_has_errordescribe();
  }
  errordescribe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errordescribe);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Respond.errorDescribe)
}

// optional .pbmsg.LoginRs login = 4;
inline bool Respond::has_login() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Respond::set_has_login() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Respond::clear_has_login() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Respond::clear_login() {
  if (login_ != NULL) login_->::pbmsg::LoginRs::Clear();
  clear_has_login();
}
inline const ::pbmsg::LoginRs& Respond::login() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.login)
  return login_ != NULL ? *login_ : *default_instance_->login_;
}
inline ::pbmsg::LoginRs* Respond::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::pbmsg::LoginRs;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Respond.login)
  return login_;
}
inline ::pbmsg::LoginRs* Respond::release_login() {
  // @@protoc_insertion_point(field_release:pbmsg.Respond.login)
  clear_has_login();
  ::pbmsg::LoginRs* temp = login_;
  login_ = NULL;
  return temp;
}
inline void Respond::set_allocated_login(::pbmsg::LoginRs* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Respond.login)
}

// optional .pbmsg.GetFriendsRs friends = 5;
inline bool Respond::has_friends() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Respond::set_has_friends() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Respond::clear_has_friends() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Respond::clear_friends() {
  if (friends_ != NULL) friends_->::pbmsg::GetFriendsRs::Clear();
  clear_has_friends();
}
inline const ::pbmsg::GetFriendsRs& Respond::friends() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.friends)
  return friends_ != NULL ? *friends_ : *default_instance_->friends_;
}
inline ::pbmsg::GetFriendsRs* Respond::mutable_friends() {
  set_has_friends();
  if (friends_ == NULL) {
    friends_ = new ::pbmsg::GetFriendsRs;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Respond.friends)
  return friends_;
}
inline ::pbmsg::GetFriendsRs* Respond::release_friends() {
  // @@protoc_insertion_point(field_release:pbmsg.Respond.friends)
  clear_has_friends();
  ::pbmsg::GetFriendsRs* temp = friends_;
  friends_ = NULL;
  return temp;
}
inline void Respond::set_allocated_friends(::pbmsg::GetFriendsRs* friends) {
  delete friends_;
  friends_ = friends;
  if (friends) {
    set_has_friends();
  } else {
    clear_has_friends();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Respond.friends)
}

// -------------------------------------------------------------------

// Notify

// optional .pbmsg.HeartbeatNt heartbeat = 1;
inline bool Notify::has_heartbeat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Notify::set_has_heartbeat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Notify::clear_has_heartbeat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Notify::clear_heartbeat() {
  if (heartbeat_ != NULL) heartbeat_->::pbmsg::HeartbeatNt::Clear();
  clear_has_heartbeat();
}
inline const ::pbmsg::HeartbeatNt& Notify::heartbeat() const {
  // @@protoc_insertion_point(field_get:pbmsg.Notify.heartbeat)
  return heartbeat_ != NULL ? *heartbeat_ : *default_instance_->heartbeat_;
}
inline ::pbmsg::HeartbeatNt* Notify::mutable_heartbeat() {
  set_has_heartbeat();
  if (heartbeat_ == NULL) {
    heartbeat_ = new ::pbmsg::HeartbeatNt;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Notify.heartbeat)
  return heartbeat_;
}
inline ::pbmsg::HeartbeatNt* Notify::release_heartbeat() {
  // @@protoc_insertion_point(field_release:pbmsg.Notify.heartbeat)
  clear_has_heartbeat();
  ::pbmsg::HeartbeatNt* temp = heartbeat_;
  heartbeat_ = NULL;
  return temp;
}
inline void Notify::set_allocated_heartbeat(::pbmsg::HeartbeatNt* heartbeat) {
  delete heartbeat_;
  heartbeat_ = heartbeat;
  if (heartbeat) {
    set_has_heartbeat();
  } else {
    clear_has_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Notify.heartbeat)
}

// optional .pbmsg.MessageNt message = 2;
inline bool Notify::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Notify::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Notify::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Notify::clear_message() {
  if (message_ != NULL) message_->::pbmsg::MessageNt::Clear();
  clear_has_message();
}
inline const ::pbmsg::MessageNt& Notify::message() const {
  // @@protoc_insertion_point(field_get:pbmsg.Notify.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
inline ::pbmsg::MessageNt* Notify::mutable_message() {
  set_has_message();
  if (message_ == NULL) {
    message_ = new ::pbmsg::MessageNt;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Notify.message)
  return message_;
}
inline ::pbmsg::MessageNt* Notify::release_message() {
  // @@protoc_insertion_point(field_release:pbmsg.Notify.message)
  clear_has_message();
  ::pbmsg::MessageNt* temp = message_;
  message_ = NULL;
  return temp;
}
inline void Notify::set_allocated_message(::pbmsg::MessageNt* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Notify.message)
}

// -------------------------------------------------------------------

// Message

// required .pbmsg.EMsg msgType = 1;
inline bool Message::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_msgtype() {
  msgtype_ = 10001;
  clear_has_msgtype();
}
inline ::pbmsg::EMsg Message::msgtype() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.msgType)
  return static_cast< ::pbmsg::EMsg >(msgtype_);
}
inline void Message::set_msgtype(::pbmsg::EMsg value) {
  assert(::pbmsg::EMsg_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.msgType)
}

// required fixed32 sequence = 2;
inline bool Message::has_sequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_sequence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 Message::sequence() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.sequence)
  return sequence_;
}
inline void Message::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.sequence)
}

// optional fixed32 sessionId = 3;
inline bool Message::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 Message::sessionid() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.sessionId)
  return sessionid_;
}
inline void Message::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.sessionId)
}

// optional .pbmsg.Request request = 4;
inline bool Message::has_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_request() {
  if (request_ != NULL) request_->::pbmsg::Request::Clear();
  clear_has_request();
}
inline const ::pbmsg::Request& Message::request() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::pbmsg::Request* Message::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::pbmsg::Request;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.request)
  return request_;
}
inline ::pbmsg::Request* Message::release_request() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.request)
  clear_has_request();
  ::pbmsg::Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline void Message::set_allocated_request(::pbmsg::Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.request)
}

// optional .pbmsg.Respond respond = 5;
inline bool Message::has_respond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_respond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_respond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_respond() {
  if (respond_ != NULL) respond_->::pbmsg::Respond::Clear();
  clear_has_respond();
}
inline const ::pbmsg::Respond& Message::respond() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.respond)
  return respond_ != NULL ? *respond_ : *default_instance_->respond_;
}
inline ::pbmsg::Respond* Message::mutable_respond() {
  set_has_respond();
  if (respond_ == NULL) {
    respond_ = new ::pbmsg::Respond;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.respond)
  return respond_;
}
inline ::pbmsg::Respond* Message::release_respond() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.respond)
  clear_has_respond();
  ::pbmsg::Respond* temp = respond_;
  respond_ = NULL;
  return temp;
}
inline void Message::set_allocated_respond(::pbmsg::Respond* respond) {
  delete respond_;
  respond_ = respond;
  if (respond) {
    set_has_respond();
  } else {
    clear_has_respond();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.respond)
}

// optional .pbmsg.Notify notify = 6;
inline bool Message::has_notify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_notify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_notify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_notify() {
  if (notify_ != NULL) notify_->::pbmsg::Notify::Clear();
  clear_has_notify();
}
inline const ::pbmsg::Notify& Message::notify() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.notify)
  return notify_ != NULL ? *notify_ : *default_instance_->notify_;
}
inline ::pbmsg::Notify* Message::mutable_notify() {
  set_has_notify();
  if (notify_ == NULL) {
    notify_ = new ::pbmsg::Notify;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.notify)
  return notify_;
}
inline ::pbmsg::Notify* Message::release_notify() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.notify)
  clear_has_notify();
  ::pbmsg::Notify* temp = notify_;
  notify_ = NULL;
  return temp;
}
inline void Message::set_allocated_notify(::pbmsg::Notify* notify) {
  delete notify_;
  notify_ = notify;
  if (notify) {
    set_has_notify();
  } else {
    clear_has_notify();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.notify)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pbmsg::EMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pbmsg::EMsg>() {
  return ::pbmsg::EMsg_descriptor();
}
template <> struct is_proto_enum< ::pbmsg::ERR_CODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pbmsg::ERR_CODE>() {
  return ::pbmsg::ERR_CODE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Message_2eproto__INCLUDED

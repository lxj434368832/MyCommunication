// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pbmsg {

namespace {

const ::google::protobuf::Descriptor* ClientMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RespondMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RespondMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRs_reflection_ = NULL;
const ::google::protobuf::Descriptor* Friend_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Friend_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFriendsRs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFriendsRs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendMessageRq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendMessageRq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatNt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatNt_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageNt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageNt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Respond_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Respond_reflection_ = NULL;
const ::google::protobuf::Descriptor* Notify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Notify_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EMsg_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ERR_CODE_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Message_2eproto() {
  protobuf_AddDesc_Message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Message.proto");
  GOOGLE_CHECK(file != NULL);
  ClientMsg_descriptor_ = file->message_type(0);
  static const int ClientMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMsg, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMsg, msg_data_),
  };
  ClientMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientMsg_descriptor_,
      ClientMsg::default_instance_,
      ClientMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(ClientMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMsg, _internal_metadata_),
      -1);
  LoginRq_descriptor_ = file->message_type(1);
  static const int LoginRq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRq, password_),
  };
  LoginRq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRq_descriptor_,
      LoginRq::default_instance_,
      LoginRq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRq, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginRq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRq, _internal_metadata_),
      -1);
  RespondMsg_descriptor_ = file->message_type(2);
  static const int RespondMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespondMsg, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespondMsg, result_msg_),
  };
  RespondMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RespondMsg_descriptor_,
      RespondMsg::default_instance_,
      RespondMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespondMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(RespondMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespondMsg, _internal_metadata_),
      -1);
  LoginRs_descriptor_ = file->message_type(3);
  static const int LoginRs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRs, ttl_),
  };
  LoginRs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRs_descriptor_,
      LoginRs::default_instance_,
      LoginRs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRs, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginRs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRs, _internal_metadata_),
      -1);
  Friend_descriptor_ = file->message_type(4);
  static const int Friend_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Friend, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Friend, online_),
  };
  Friend_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Friend_descriptor_,
      Friend::default_instance_,
      Friend_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Friend, _has_bits_[0]),
      -1,
      -1,
      sizeof(Friend),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Friend, _internal_metadata_),
      -1);
  GetFriendsRs_descriptor_ = file->message_type(5);
  static const int GetFriendsRs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendsRs, friends_),
  };
  GetFriendsRs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFriendsRs_descriptor_,
      GetFriendsRs::default_instance_,
      GetFriendsRs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendsRs, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetFriendsRs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFriendsRs, _internal_metadata_),
      -1);
  SendMessageRq_descriptor_ = file->message_type(6);
  static const int SendMessageRq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageRq, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageRq, text_),
  };
  SendMessageRq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendMessageRq_descriptor_,
      SendMessageRq::default_instance_,
      SendMessageRq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageRq, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendMessageRq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageRq, _internal_metadata_),
      -1);
  HeartbeatNt_descriptor_ = file->message_type(7);
  static const int HeartbeatNt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatNt, user_id_),
  };
  HeartbeatNt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatNt_descriptor_,
      HeartbeatNt::default_instance_,
      HeartbeatNt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatNt, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeartbeatNt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatNt, _internal_metadata_),
      -1);
  MessageNt_descriptor_ = file->message_type(8);
  static const int MessageNt_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNt, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNt, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNt, timestamp_),
  };
  MessageNt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageNt_descriptor_,
      MessageNt::default_instance_,
      MessageNt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNt, _has_bits_[0]),
      -1,
      -1,
      sizeof(MessageNt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNt, _internal_metadata_),
      -1);
  Request_descriptor_ = file->message_type(9);
  static const int Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, sendmessage_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
      -1);
  Respond_descriptor_ = file->message_type(10);
  static const int Respond_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Respond, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Respond, lastrespond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Respond, errordescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Respond, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Respond, friends_),
  };
  Respond_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Respond_descriptor_,
      Respond::default_instance_,
      Respond_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Respond, _has_bits_[0]),
      -1,
      -1,
      sizeof(Respond),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Respond, _internal_metadata_),
      -1);
  Notify_descriptor_ = file->message_type(11);
  static const int Notify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify, heartbeat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify, message_),
  };
  Notify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Notify_descriptor_,
      Notify::default_instance_,
      Notify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify, _has_bits_[0]),
      -1,
      -1,
      sizeof(Notify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notify, _internal_metadata_),
      -1);
  Message_descriptor_ = file->message_type(12);
  static const int Message_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, respond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, notify_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
      -1);
  EMsg_descriptor_ = file->enum_type(0);
  ERR_CODE_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientMsg_descriptor_, &ClientMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRq_descriptor_, &LoginRq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RespondMsg_descriptor_, &RespondMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRs_descriptor_, &LoginRs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Friend_descriptor_, &Friend::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFriendsRs_descriptor_, &GetFriendsRs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendMessageRq_descriptor_, &SendMessageRq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatNt_descriptor_, &HeartbeatNt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageNt_descriptor_, &MessageNt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Respond_descriptor_, &Respond::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Notify_descriptor_, &Notify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, &Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Message_2eproto() {
  delete ClientMsg::default_instance_;
  delete ClientMsg_reflection_;
  delete LoginRq::default_instance_;
  delete LoginRq_reflection_;
  delete RespondMsg::default_instance_;
  delete RespondMsg_reflection_;
  delete LoginRs::default_instance_;
  delete LoginRs_reflection_;
  delete Friend::default_instance_;
  delete Friend_reflection_;
  delete GetFriendsRs::default_instance_;
  delete GetFriendsRs_reflection_;
  delete SendMessageRq::default_instance_;
  delete SendMessageRq_reflection_;
  delete HeartbeatNt::default_instance_;
  delete HeartbeatNt_reflection_;
  delete MessageNt::default_instance_;
  delete MessageNt_reflection_;
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Respond::default_instance_;
  delete Respond_reflection_;
  delete Notify::default_instance_;
  delete Notify_reflection_;
  delete Message::default_instance_;
  delete Message_reflection_;
}

void protobuf_AddDesc_Message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMessage.proto\022\005pbmsg\"<\n\tClientMsg\022\035\n\010m"
    "sg_type\030\001 \002(\0162\013.pbmsg.EMsg\022\020\n\010msg_data\030\002"
    " \002(\014\">\n\007LoginRq\022\017\n\007user_id\030\001 \002(\r\022\020\n\010user"
    "name\030\002 \002(\014\022\020\n\010password\030\003 \001(\t\"0\n\nRespondM"
    "sg\022\016\n\006result\030\001 \002(\005\022\022\n\nresult_msg\030\002 \002(\014\"\026"
    "\n\007LoginRs\022\013\n\003ttl\030\001 \002(\007\"&\n\006Friend\022\014\n\004name"
    "\030\001 \002(\014\022\016\n\006online\030\002 \001(\010\".\n\014GetFriendsRs\022\036"
    "\n\007friends\030\001 \003(\0132\r.pbmsg.Friend\"/\n\rSendMe"
    "ssageRq\022\020\n\010receiver\030\001 \001(\014\022\014\n\004text\030\002 \002(\014\""
    "\036\n\013HeartbeatNt\022\017\n\007user_id\030\001 \002(\r\"<\n\tMessa"
    "geNt\022\016\n\006sender\030\001 \002(\014\022\014\n\004text\030\002 \002(\014\022\021\n\tti"
    "mestamp\030\003 \002(\t\"S\n\007Request\022\035\n\005login\030\001 \001(\0132"
    "\016.pbmsg.LoginRq\022)\n\013sendMessage\030\002 \001(\0132\024.p"
    "bmsg.SendMessageRq\"\212\001\n\007Respond\022\016\n\006result"
    "\030\001 \002(\010\022\023\n\013lastRespond\030\002 \002(\010\022\025\n\rerrorDesc"
    "ribe\030\003 \001(\014\022\035\n\005login\030\004 \001(\0132\016.pbmsg.LoginR"
    "s\022$\n\007friends\030\005 \001(\0132\023.pbmsg.GetFriendsRs\""
    "R\n\006Notify\022%\n\theartbeat\030\001 \001(\0132\022.pbmsg.Hea"
    "rtbeatNt\022!\n\007message\030\002 \001(\0132\020.pbmsg.Messag"
    "eNt\"\255\001\n\007Message\022\034\n\007msgType\030\001 \002(\0162\013.pbmsg"
    ".EMsg\022\020\n\010sequence\030\002 \002(\007\022\021\n\tsessionId\030\003 \001"
    "(\007\022\037\n\007request\030\004 \001(\0132\016.pbmsg.Request\022\037\n\007r"
    "espond\030\005 \001(\0132\016.pbmsg.Respond\022\035\n\006notify\030\006"
    " \001(\0132\r.pbmsg.Notify*\274\001\n\004EMsg\022\r\n\010ELoginRq"
    "\020\221N\022\r\n\010ELoginRs\020\222N\022\016\n\tELogoutRq\020\223N\022\016\n\tEL"
    "ogoutRs\020\224N\022\022\n\rEGetFriendsRq\020\227N\022\022\n\rEGetFr"
    "iendsRs\020\230N\022\023\n\016ESendMessageRq\020\231N\022\023\n\016ESend"
    "MessageRs\020\232N\022\022\n\014EHeartbeatNt\020\241\234\001\022\020\n\nEMes"
    "sageNt\020\242\234\001*p\n\010ERR_CODE\022\027\n\021CLIENT_ERR_REF"
    "USE\020\241\215\006\022\027\n\021CLIENT_ERR_ACCEPT\020\242\215\006\022\026\n\020SERV"
    "ER1_ERR_STOP\020\301\232\014\022\032\n\024SERVER2_ERR_OVERLOAD"
    "\020\341\247\022", 1244);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  ClientMsg::default_instance_ = new ClientMsg();
  LoginRq::default_instance_ = new LoginRq();
  RespondMsg::default_instance_ = new RespondMsg();
  LoginRs::default_instance_ = new LoginRs();
  Friend::default_instance_ = new Friend();
  GetFriendsRs::default_instance_ = new GetFriendsRs();
  SendMessageRq::default_instance_ = new SendMessageRq();
  HeartbeatNt::default_instance_ = new HeartbeatNt();
  MessageNt::default_instance_ = new MessageNt();
  Request::default_instance_ = new Request();
  Respond::default_instance_ = new Respond();
  Notify::default_instance_ = new Notify();
  Message::default_instance_ = new Message();
  ClientMsg::default_instance_->InitAsDefaultInstance();
  LoginRq::default_instance_->InitAsDefaultInstance();
  RespondMsg::default_instance_->InitAsDefaultInstance();
  LoginRs::default_instance_->InitAsDefaultInstance();
  Friend::default_instance_->InitAsDefaultInstance();
  GetFriendsRs::default_instance_->InitAsDefaultInstance();
  SendMessageRq::default_instance_->InitAsDefaultInstance();
  HeartbeatNt::default_instance_->InitAsDefaultInstance();
  MessageNt::default_instance_->InitAsDefaultInstance();
  Request::default_instance_->InitAsDefaultInstance();
  Respond::default_instance_->InitAsDefaultInstance();
  Notify::default_instance_->InitAsDefaultInstance();
  Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Message_2eproto {
  StaticDescriptorInitializer_Message_2eproto() {
    protobuf_AddDesc_Message_2eproto();
  }
} static_descriptor_initializer_Message_2eproto_;
const ::google::protobuf::EnumDescriptor* EMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EMsg_descriptor_;
}
bool EMsg_IsValid(int value) {
  switch(value) {
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10007:
    case 10008:
    case 10009:
    case 10010:
    case 20001:
    case 20002:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERR_CODE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ERR_CODE_descriptor_;
}
bool ERR_CODE_IsValid(int value) {
  switch(value) {
    case 100001:
    case 100002:
    case 200001:
    case 300001:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMsg::kMsgTypeFieldNumber;
const int ClientMsg::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMsg::ClientMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.ClientMsg)
}

void ClientMsg::InitAsDefaultInstance() {
}

ClientMsg::ClientMsg(const ClientMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.ClientMsg)
}

void ClientMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_type_ = 10001;
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientMsg::~ClientMsg() {
  // @@protoc_insertion_point(destructor:pbmsg.ClientMsg)
  SharedDtor();
}

void ClientMsg::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ClientMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientMsg_descriptor_;
}

const ClientMsg& ClientMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

ClientMsg* ClientMsg::default_instance_ = NULL;

ClientMsg* ClientMsg::New(::google::protobuf::Arena* arena) const {
  ClientMsg* n = new ClientMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.ClientMsg)
  if (_has_bits_[0 / 32] & 3u) {
    msg_type_ = 10001;
    if (has_msg_data()) {
      msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.ClientMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.EMsg msg_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pbmsg::EMsg_IsValid(value)) {
            set_msg_type(static_cast< ::pbmsg::EMsg >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg_data;
        break;
      }

      // required bytes msg_data = 2;
      case 2: {
        if (tag == 18) {
         parse_msg_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.ClientMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.ClientMsg)
  return false;
#undef DO_
}

void ClientMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.ClientMsg)
  // required .pbmsg.EMsg msg_type = 1;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  // required bytes msg_data = 2;
  if (has_msg_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.ClientMsg)
}

::google::protobuf::uint8* ClientMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.ClientMsg)
  // required .pbmsg.EMsg msg_type = 1;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  // required bytes msg_data = 2;
  if (has_msg_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.ClientMsg)
  return target;
}

int ClientMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pbmsg.ClientMsg)
  int total_size = 0;

  if (has_msg_type()) {
    // required .pbmsg.EMsg msg_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  if (has_msg_data()) {
    // required bytes msg_data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());
  }

  return total_size;
}
int ClientMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.ClientMsg)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .pbmsg.EMsg msg_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());

    // required bytes msg_data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.ClientMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ClientMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.ClientMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.ClientMsg)
    MergeFrom(*source);
  }
}

void ClientMsg::MergeFrom(const ClientMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.ClientMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_msg_data()) {
      set_has_msg_data();
      msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ClientMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.ClientMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMsg::CopyFrom(const ClientMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.ClientMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ClientMsg::Swap(ClientMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMsg::InternalSwap(ClientMsg* other) {
  std::swap(msg_type_, other->msg_type_);
  msg_data_.Swap(&other->msg_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientMsg_descriptor_;
  metadata.reflection = ClientMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientMsg

// required .pbmsg.EMsg msg_type = 1;
bool ClientMsg::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClientMsg::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ClientMsg::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClientMsg::clear_msg_type() {
  msg_type_ = 10001;
  clear_has_msg_type();
}
 ::pbmsg::EMsg ClientMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:pbmsg.ClientMsg.msg_type)
  return static_cast< ::pbmsg::EMsg >(msg_type_);
}
 void ClientMsg::set_msg_type(::pbmsg::EMsg value) {
  assert(::pbmsg::EMsg_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.ClientMsg.msg_type)
}

// required bytes msg_data = 2;
bool ClientMsg::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClientMsg::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
void ClientMsg::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClientMsg::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_data();
}
 const ::std::string& ClientMsg::msg_data() const {
  // @@protoc_insertion_point(field_get:pbmsg.ClientMsg.msg_data)
  return msg_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientMsg::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.ClientMsg.msg_data)
}
 void ClientMsg::set_msg_data(const char* value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.ClientMsg.msg_data)
}
 void ClientMsg::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.ClientMsg.msg_data)
}
 ::std::string* ClientMsg::mutable_msg_data() {
  set_has_msg_data();
  // @@protoc_insertion_point(field_mutable:pbmsg.ClientMsg.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ClientMsg::release_msg_data() {
  // @@protoc_insertion_point(field_release:pbmsg.ClientMsg.msg_data)
  clear_has_msg_data();
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientMsg::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    set_has_msg_data();
  } else {
    clear_has_msg_data();
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.ClientMsg.msg_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRq::kUserIdFieldNumber;
const int LoginRq::kUsernameFieldNumber;
const int LoginRq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRq::LoginRq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.LoginRq)
}

void LoginRq::InitAsDefaultInstance() {
}

LoginRq::LoginRq(const LoginRq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.LoginRq)
}

void LoginRq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = 0u;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginRq::~LoginRq() {
  // @@protoc_insertion_point(destructor:pbmsg.LoginRq)
  SharedDtor();
}

void LoginRq::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginRq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRq_descriptor_;
}

const LoginRq& LoginRq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

LoginRq* LoginRq::default_instance_ = NULL;

LoginRq* LoginRq::New(::google::protobuf::Arena* arena) const {
  LoginRq* n = new LoginRq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRq::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.LoginRq)
  if (_has_bits_[0 / 32] & 7u) {
    user_id_ = 0u;
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginRq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.LoginRq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_username;
        break;
      }

      // required bytes username = 2;
      case 2: {
        if (tag == 18) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pbmsg.LoginRq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.LoginRq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.LoginRq)
  return false;
#undef DO_
}

void LoginRq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.LoginRq)
  // required uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // required bytes username = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->username(), output);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pbmsg.LoginRq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.LoginRq)
}

::google::protobuf::uint8* LoginRq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.LoginRq)
  // required uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // required bytes username = 2;
  if (has_username()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->username(), target);
  }

  // optional string password = 3;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pbmsg.LoginRq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.LoginRq)
  return target;
}

int LoginRq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pbmsg.LoginRq)
  int total_size = 0;

  if (has_user_id()) {
    // required uint32 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  if (has_username()) {
    // required bytes username = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->username());
  }

  return total_size;
}
int LoginRq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.LoginRq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 user_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());

    // required bytes username = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->username());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string password = 3;
  if (has_password()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.LoginRq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginRq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.LoginRq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.LoginRq)
    MergeFrom(*source);
  }
}

void LoginRq::MergeFrom(const LoginRq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.LoginRq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginRq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.LoginRq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRq::CopyFrom(const LoginRq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.LoginRq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LoginRq::Swap(LoginRq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRq::InternalSwap(LoginRq* other) {
  std::swap(user_id_, other->user_id_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRq_descriptor_;
  metadata.reflection = LoginRq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRq

// required uint32 user_id = 1;
bool LoginRq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginRq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginRq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginRq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 LoginRq::user_id() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRq.user_id)
  return user_id_;
}
 void LoginRq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.LoginRq.user_id)
}

// required bytes username = 2;
bool LoginRq::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginRq::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginRq::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginRq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
 const ::std::string& LoginRq::username() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.LoginRq.username)
}
 void LoginRq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.LoginRq.username)
}
 void LoginRq::set_username(const void* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.LoginRq.username)
}
 ::std::string* LoginRq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:pbmsg.LoginRq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRq::release_username() {
  // @@protoc_insertion_point(field_release:pbmsg.LoginRq.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.LoginRq.username)
}

// optional string password = 3;
bool LoginRq::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginRq::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginRq::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginRq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
 const ::std::string& LoginRq::password() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.LoginRq.password)
}
 void LoginRq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.LoginRq.password)
}
 void LoginRq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.LoginRq.password)
}
 ::std::string* LoginRq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:pbmsg.LoginRq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginRq::release_password() {
  // @@protoc_insertion_point(field_release:pbmsg.LoginRq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginRq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.LoginRq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespondMsg::kResultFieldNumber;
const int RespondMsg::kResultMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespondMsg::RespondMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.RespondMsg)
}

void RespondMsg::InitAsDefaultInstance() {
}

RespondMsg::RespondMsg(const RespondMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.RespondMsg)
}

void RespondMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  result_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RespondMsg::~RespondMsg() {
  // @@protoc_insertion_point(destructor:pbmsg.RespondMsg)
  SharedDtor();
}

void RespondMsg::SharedDtor() {
  result_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RespondMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RespondMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RespondMsg_descriptor_;
}

const RespondMsg& RespondMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

RespondMsg* RespondMsg::default_instance_ = NULL;

RespondMsg* RespondMsg::New(::google::protobuf::Arena* arena) const {
  RespondMsg* n = new RespondMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RespondMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.RespondMsg)
  if (_has_bits_[0 / 32] & 3u) {
    result_ = 0;
    if (has_result_msg()) {
      result_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RespondMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.RespondMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_result_msg;
        break;
      }

      // required bytes result_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_result_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.RespondMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.RespondMsg)
  return false;
#undef DO_
}

void RespondMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.RespondMsg)
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required bytes result_msg = 2;
  if (has_result_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->result_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.RespondMsg)
}

::google::protobuf::uint8* RespondMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.RespondMsg)
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required bytes result_msg = 2;
  if (has_result_msg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->result_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.RespondMsg)
  return target;
}

int RespondMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pbmsg.RespondMsg)
  int total_size = 0;

  if (has_result()) {
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  if (has_result_msg()) {
    // required bytes result_msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result_msg());
  }

  return total_size;
}
int RespondMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.RespondMsg)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 result = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());

    // required bytes result_msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result_msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RespondMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.RespondMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RespondMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RespondMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.RespondMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.RespondMsg)
    MergeFrom(*source);
  }
}

void RespondMsg::MergeFrom(const RespondMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.RespondMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_result_msg()) {
      set_has_result_msg();
      result_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RespondMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.RespondMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespondMsg::CopyFrom(const RespondMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.RespondMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespondMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RespondMsg::Swap(RespondMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespondMsg::InternalSwap(RespondMsg* other) {
  std::swap(result_, other->result_);
  result_msg_.Swap(&other->result_msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RespondMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RespondMsg_descriptor_;
  metadata.reflection = RespondMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RespondMsg

// required int32 result = 1;
bool RespondMsg::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RespondMsg::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void RespondMsg::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void RespondMsg::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 RespondMsg::result() const {
  // @@protoc_insertion_point(field_get:pbmsg.RespondMsg.result)
  return result_;
}
 void RespondMsg::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.RespondMsg.result)
}

// required bytes result_msg = 2;
bool RespondMsg::has_result_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RespondMsg::set_has_result_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void RespondMsg::clear_has_result_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void RespondMsg::clear_result_msg() {
  result_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result_msg();
}
 const ::std::string& RespondMsg::result_msg() const {
  // @@protoc_insertion_point(field_get:pbmsg.RespondMsg.result_msg)
  return result_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RespondMsg::set_result_msg(const ::std::string& value) {
  set_has_result_msg();
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.RespondMsg.result_msg)
}
 void RespondMsg::set_result_msg(const char* value) {
  set_has_result_msg();
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.RespondMsg.result_msg)
}
 void RespondMsg::set_result_msg(const void* value, size_t size) {
  set_has_result_msg();
  result_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.RespondMsg.result_msg)
}
 ::std::string* RespondMsg::mutable_result_msg() {
  set_has_result_msg();
  // @@protoc_insertion_point(field_mutable:pbmsg.RespondMsg.result_msg)
  return result_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RespondMsg::release_result_msg() {
  // @@protoc_insertion_point(field_release:pbmsg.RespondMsg.result_msg)
  clear_has_result_msg();
  return result_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RespondMsg::set_allocated_result_msg(::std::string* result_msg) {
  if (result_msg != NULL) {
    set_has_result_msg();
  } else {
    clear_has_result_msg();
  }
  result_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_msg);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.RespondMsg.result_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRs::kTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRs::LoginRs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.LoginRs)
}

void LoginRs::InitAsDefaultInstance() {
}

LoginRs::LoginRs(const LoginRs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.LoginRs)
}

void LoginRs::SharedCtor() {
  _cached_size_ = 0;
  ttl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginRs::~LoginRs() {
  // @@protoc_insertion_point(destructor:pbmsg.LoginRs)
  SharedDtor();
}

void LoginRs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginRs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRs_descriptor_;
}

const LoginRs& LoginRs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

LoginRs* LoginRs::default_instance_ = NULL;

LoginRs* LoginRs::New(::google::protobuf::Arena* arena) const {
  LoginRs* n = new LoginRs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRs::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.LoginRs)
  ttl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginRs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.LoginRs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed32 ttl = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ttl_)));
          set_has_ttl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.LoginRs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.LoginRs)
  return false;
#undef DO_
}

void LoginRs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.LoginRs)
  // required fixed32 ttl = 1;
  if (has_ttl()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ttl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.LoginRs)
}

::google::protobuf::uint8* LoginRs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.LoginRs)
  // required fixed32 ttl = 1;
  if (has_ttl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ttl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.LoginRs)
  return target;
}

int LoginRs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.LoginRs)
  int total_size = 0;

  // required fixed32 ttl = 1;
  if (has_ttl()) {
    total_size += 1 + 4;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.LoginRs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginRs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.LoginRs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.LoginRs)
    MergeFrom(*source);
  }
}

void LoginRs::MergeFrom(const LoginRs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.LoginRs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ttl()) {
      set_ttl(from.ttl());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginRs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.LoginRs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRs::CopyFrom(const LoginRs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.LoginRs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LoginRs::Swap(LoginRs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRs::InternalSwap(LoginRs* other) {
  std::swap(ttl_, other->ttl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRs_descriptor_;
  metadata.reflection = LoginRs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRs

// required fixed32 ttl = 1;
bool LoginRs::has_ttl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginRs::set_has_ttl() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginRs::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginRs::clear_ttl() {
  ttl_ = 0u;
  clear_has_ttl();
}
 ::google::protobuf::uint32 LoginRs::ttl() const {
  // @@protoc_insertion_point(field_get:pbmsg.LoginRs.ttl)
  return ttl_;
}
 void LoginRs::set_ttl(::google::protobuf::uint32 value) {
  set_has_ttl();
  ttl_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.LoginRs.ttl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Friend::kNameFieldNumber;
const int Friend::kOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Friend::Friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.Friend)
}

void Friend::InitAsDefaultInstance() {
}

Friend::Friend(const Friend& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.Friend)
}

void Friend::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Friend::~Friend() {
  // @@protoc_insertion_point(destructor:pbmsg.Friend)
  SharedDtor();
}

void Friend::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Friend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Friend::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Friend_descriptor_;
}

const Friend& Friend::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Friend* Friend::default_instance_ = NULL;

Friend* Friend::New(::google::protobuf::Arena* arena) const {
  Friend* n = new Friend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.Friend)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    online_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.Friend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_online;
        break;
      }

      // optional bool online = 2;
      case 2: {
        if (tag == 16) {
         parse_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
          set_has_online();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.Friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.Friend)
  return false;
#undef DO_
}

void Friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.Friend)
  // required bytes name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // optional bool online = 2;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->online(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.Friend)
}

::google::protobuf::uint8* Friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.Friend)
  // required bytes name = 1;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // optional bool online = 2;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->online(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.Friend)
  return target;
}

int Friend::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.Friend)
  int total_size = 0;

  // required bytes name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }
  // optional bool online = 2;
  if (has_online()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.Friend)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Friend* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.Friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.Friend)
    MergeFrom(*source);
  }
}

void Friend::MergeFrom(const Friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.Friend)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_online()) {
      set_online(from.online());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Friend::CopyFrom(const Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Friend::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Friend::Swap(Friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Friend::InternalSwap(Friend* other) {
  name_.Swap(&other->name_);
  std::swap(online_, other->online_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Friend::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Friend_descriptor_;
  metadata.reflection = Friend_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Friend

// required bytes name = 1;
bool Friend::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Friend::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Friend::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Friend::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Friend::name() const {
  // @@protoc_insertion_point(field_get:pbmsg.Friend.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Friend::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.Friend.name)
}
 void Friend::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.Friend.name)
}
 void Friend::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.Friend.name)
}
 ::std::string* Friend::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pbmsg.Friend.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Friend::release_name() {
  // @@protoc_insertion_point(field_release:pbmsg.Friend.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Friend::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Friend.name)
}

// optional bool online = 2;
bool Friend::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Friend::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
void Friend::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
void Friend::clear_online() {
  online_ = false;
  clear_has_online();
}
 bool Friend::online() const {
  // @@protoc_insertion_point(field_get:pbmsg.Friend.online)
  return online_;
}
 void Friend::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Friend.online)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendsRs::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendsRs::GetFriendsRs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.GetFriendsRs)
}

void GetFriendsRs::InitAsDefaultInstance() {
}

GetFriendsRs::GetFriendsRs(const GetFriendsRs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.GetFriendsRs)
}

void GetFriendsRs::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFriendsRs::~GetFriendsRs() {
  // @@protoc_insertion_point(destructor:pbmsg.GetFriendsRs)
  SharedDtor();
}

void GetFriendsRs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFriendsRs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendsRs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFriendsRs_descriptor_;
}

const GetFriendsRs& GetFriendsRs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

GetFriendsRs* GetFriendsRs::default_instance_ = NULL;

GetFriendsRs* GetFriendsRs::New(::google::protobuf::Arena* arena) const {
  GetFriendsRs* n = new GetFriendsRs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFriendsRs::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.GetFriendsRs)
  friends_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetFriendsRs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.GetFriendsRs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pbmsg.Friend friends = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_friends:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_friends;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.GetFriendsRs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.GetFriendsRs)
  return false;
#undef DO_
}

void GetFriendsRs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.GetFriendsRs)
  // repeated .pbmsg.Friend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friends(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.GetFriendsRs)
}

::google::protobuf::uint8* GetFriendsRs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.GetFriendsRs)
  // repeated .pbmsg.Friend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friends(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.GetFriendsRs)
  return target;
}

int GetFriendsRs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.GetFriendsRs)
  int total_size = 0;

  // repeated .pbmsg.Friend friends = 1;
  total_size += 1 * this->friends_size();
  for (int i = 0; i < this->friends_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friends(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendsRs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.GetFriendsRs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetFriendsRs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendsRs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.GetFriendsRs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.GetFriendsRs)
    MergeFrom(*source);
  }
}

void GetFriendsRs::MergeFrom(const GetFriendsRs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.GetFriendsRs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  friends_.MergeFrom(from.friends_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetFriendsRs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.GetFriendsRs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendsRs::CopyFrom(const GetFriendsRs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.GetFriendsRs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendsRs::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->friends())) return false;
  return true;
}

void GetFriendsRs::Swap(GetFriendsRs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendsRs::InternalSwap(GetFriendsRs* other) {
  friends_.UnsafeArenaSwap(&other->friends_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendsRs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFriendsRs_descriptor_;
  metadata.reflection = GetFriendsRs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFriendsRs

// repeated .pbmsg.Friend friends = 1;
int GetFriendsRs::friends_size() const {
  return friends_.size();
}
void GetFriendsRs::clear_friends() {
  friends_.Clear();
}
const ::pbmsg::Friend& GetFriendsRs::friends(int index) const {
  // @@protoc_insertion_point(field_get:pbmsg.GetFriendsRs.friends)
  return friends_.Get(index);
}
::pbmsg::Friend* GetFriendsRs::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:pbmsg.GetFriendsRs.friends)
  return friends_.Mutable(index);
}
::pbmsg::Friend* GetFriendsRs::add_friends() {
  // @@protoc_insertion_point(field_add:pbmsg.GetFriendsRs.friends)
  return friends_.Add();
}
::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >*
GetFriendsRs::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:pbmsg.GetFriendsRs.friends)
  return &friends_;
}
const ::google::protobuf::RepeatedPtrField< ::pbmsg::Friend >&
GetFriendsRs::friends() const {
  // @@protoc_insertion_point(field_list:pbmsg.GetFriendsRs.friends)
  return friends_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMessageRq::kReceiverFieldNumber;
const int SendMessageRq::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMessageRq::SendMessageRq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.SendMessageRq)
}

void SendMessageRq::InitAsDefaultInstance() {
}

SendMessageRq::SendMessageRq(const SendMessageRq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.SendMessageRq)
}

void SendMessageRq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendMessageRq::~SendMessageRq() {
  // @@protoc_insertion_point(destructor:pbmsg.SendMessageRq)
  SharedDtor();
}

void SendMessageRq::SharedDtor() {
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SendMessageRq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMessageRq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendMessageRq_descriptor_;
}

const SendMessageRq& SendMessageRq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

SendMessageRq* SendMessageRq::default_instance_ = NULL;

SendMessageRq* SendMessageRq::New(::google::protobuf::Arena* arena) const {
  SendMessageRq* n = new SendMessageRq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMessageRq::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.SendMessageRq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_receiver()) {
      receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendMessageRq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.SendMessageRq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes receiver = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_receiver()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // required bytes text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_text()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.SendMessageRq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.SendMessageRq)
  return false;
#undef DO_
}

void SendMessageRq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.SendMessageRq)
  // optional bytes receiver = 1;
  if (has_receiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->receiver(), output);
  }

  // required bytes text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.SendMessageRq)
}

::google::protobuf::uint8* SendMessageRq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.SendMessageRq)
  // optional bytes receiver = 1;
  if (has_receiver()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->receiver(), target);
  }

  // required bytes text = 2;
  if (has_text()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.SendMessageRq)
  return target;
}

int SendMessageRq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.SendMessageRq)
  int total_size = 0;

  // required bytes text = 2;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->text());
  }
  // optional bytes receiver = 1;
  if (has_receiver()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->receiver());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendMessageRq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.SendMessageRq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendMessageRq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMessageRq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.SendMessageRq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.SendMessageRq)
    MergeFrom(*source);
  }
}

void SendMessageRq::MergeFrom(const SendMessageRq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.SendMessageRq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_receiver()) {
      set_has_receiver();
      receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendMessageRq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.SendMessageRq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMessageRq::CopyFrom(const SendMessageRq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.SendMessageRq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMessageRq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void SendMessageRq::Swap(SendMessageRq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMessageRq::InternalSwap(SendMessageRq* other) {
  receiver_.Swap(&other->receiver_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendMessageRq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendMessageRq_descriptor_;
  metadata.reflection = SendMessageRq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMessageRq

// optional bytes receiver = 1;
bool SendMessageRq::has_receiver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendMessageRq::set_has_receiver() {
  _has_bits_[0] |= 0x00000001u;
}
void SendMessageRq::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendMessageRq::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receiver();
}
 const ::std::string& SendMessageRq::receiver() const {
  // @@protoc_insertion_point(field_get:pbmsg.SendMessageRq.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMessageRq::set_receiver(const ::std::string& value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.SendMessageRq.receiver)
}
 void SendMessageRq::set_receiver(const char* value) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.SendMessageRq.receiver)
}
 void SendMessageRq::set_receiver(const void* value, size_t size) {
  set_has_receiver();
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.SendMessageRq.receiver)
}
 ::std::string* SendMessageRq::mutable_receiver() {
  set_has_receiver();
  // @@protoc_insertion_point(field_mutable:pbmsg.SendMessageRq.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendMessageRq::release_receiver() {
  // @@protoc_insertion_point(field_release:pbmsg.SendMessageRq.receiver)
  clear_has_receiver();
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMessageRq::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    set_has_receiver();
  } else {
    clear_has_receiver();
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.SendMessageRq.receiver)
}

// required bytes text = 2;
bool SendMessageRq::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendMessageRq::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void SendMessageRq::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendMessageRq::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& SendMessageRq::text() const {
  // @@protoc_insertion_point(field_get:pbmsg.SendMessageRq.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMessageRq::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.SendMessageRq.text)
}
 void SendMessageRq::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.SendMessageRq.text)
}
 void SendMessageRq::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.SendMessageRq.text)
}
 ::std::string* SendMessageRq::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pbmsg.SendMessageRq.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendMessageRq::release_text() {
  // @@protoc_insertion_point(field_release:pbmsg.SendMessageRq.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMessageRq::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.SendMessageRq.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatNt::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatNt::HeartbeatNt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.HeartbeatNt)
}

void HeartbeatNt::InitAsDefaultInstance() {
}

HeartbeatNt::HeartbeatNt(const HeartbeatNt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.HeartbeatNt)
}

void HeartbeatNt::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartbeatNt::~HeartbeatNt() {
  // @@protoc_insertion_point(destructor:pbmsg.HeartbeatNt)
  SharedDtor();
}

void HeartbeatNt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartbeatNt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatNt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatNt_descriptor_;
}

const HeartbeatNt& HeartbeatNt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

HeartbeatNt* HeartbeatNt::default_instance_ = NULL;

HeartbeatNt* HeartbeatNt::New(::google::protobuf::Arena* arena) const {
  HeartbeatNt* n = new HeartbeatNt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatNt::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.HeartbeatNt)
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartbeatNt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.HeartbeatNt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.HeartbeatNt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.HeartbeatNt)
  return false;
#undef DO_
}

void HeartbeatNt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.HeartbeatNt)
  // required uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.HeartbeatNt)
}

::google::protobuf::uint8* HeartbeatNt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.HeartbeatNt)
  // required uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.HeartbeatNt)
  return target;
}

int HeartbeatNt::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.HeartbeatNt)
  int total_size = 0;

  // required uint32 user_id = 1;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatNt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.HeartbeatNt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HeartbeatNt* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatNt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.HeartbeatNt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.HeartbeatNt)
    MergeFrom(*source);
  }
}

void HeartbeatNt::MergeFrom(const HeartbeatNt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.HeartbeatNt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeartbeatNt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.HeartbeatNt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatNt::CopyFrom(const HeartbeatNt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.HeartbeatNt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatNt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HeartbeatNt::Swap(HeartbeatNt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatNt::InternalSwap(HeartbeatNt* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatNt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatNt_descriptor_;
  metadata.reflection = HeartbeatNt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatNt

// required uint32 user_id = 1;
bool HeartbeatNt::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HeartbeatNt::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void HeartbeatNt::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void HeartbeatNt::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 HeartbeatNt::user_id() const {
  // @@protoc_insertion_point(field_get:pbmsg.HeartbeatNt.user_id)
  return user_id_;
}
 void HeartbeatNt::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.HeartbeatNt.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageNt::kSenderFieldNumber;
const int MessageNt::kTextFieldNumber;
const int MessageNt::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageNt::MessageNt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.MessageNt)
}

void MessageNt::InitAsDefaultInstance() {
}

MessageNt::MessageNt(const MessageNt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.MessageNt)
}

void MessageNt::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageNt::~MessageNt() {
  // @@protoc_insertion_point(destructor:pbmsg.MessageNt)
  SharedDtor();
}

void MessageNt::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageNt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageNt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageNt_descriptor_;
}

const MessageNt& MessageNt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

MessageNt* MessageNt::default_instance_ = NULL;

MessageNt* MessageNt::New(::google::protobuf::Arena* arena) const {
  MessageNt* n = new MessageNt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageNt::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.MessageNt)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_sender()) {
      sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_timestamp()) {
      timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MessageNt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.MessageNt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes sender = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sender()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // required bytes text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_text()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_timestamp;
        break;
      }

      // required string timestamp = 3;
      case 3: {
        if (tag == 26) {
         parse_timestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pbmsg.MessageNt.timestamp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.MessageNt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.MessageNt)
  return false;
#undef DO_
}

void MessageNt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.MessageNt)
  // required bytes sender = 1;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sender(), output);
  }

  // required bytes text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->text(), output);
  }

  // required string timestamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pbmsg.MessageNt.timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.MessageNt)
}

::google::protobuf::uint8* MessageNt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.MessageNt)
  // required bytes sender = 1;
  if (has_sender()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sender(), target);
  }

  // required bytes text = 2;
  if (has_text()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->text(), target);
  }

  // required string timestamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pbmsg.MessageNt.timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.MessageNt)
  return target;
}

int MessageNt::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pbmsg.MessageNt)
  int total_size = 0;

  if (has_sender()) {
    // required bytes sender = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sender());
  }

  if (has_text()) {
    // required bytes text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->text());
  }

  if (has_timestamp()) {
    // required string timestamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  return total_size;
}
int MessageNt::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.MessageNt)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes sender = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sender());

    // required bytes text = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->text());

    // required string timestamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageNt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.MessageNt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MessageNt* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageNt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.MessageNt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.MessageNt)
    MergeFrom(*source);
  }
}

void MessageNt::MergeFrom(const MessageNt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.MessageNt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sender()) {
      set_has_sender();
      sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_timestamp()) {
      set_has_timestamp();
      timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MessageNt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.MessageNt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageNt::CopyFrom(const MessageNt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.MessageNt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageNt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MessageNt::Swap(MessageNt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageNt::InternalSwap(MessageNt* other) {
  sender_.Swap(&other->sender_);
  text_.Swap(&other->text_);
  timestamp_.Swap(&other->timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageNt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageNt_descriptor_;
  metadata.reflection = MessageNt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageNt

// required bytes sender = 1;
bool MessageNt::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageNt::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageNt::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageNt::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender();
}
 const ::std::string& MessageNt::sender() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNt.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNt::set_sender(const ::std::string& value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNt.sender)
}
 void MessageNt::set_sender(const char* value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNt.sender)
}
 void MessageNt::set_sender(const void* value, size_t size) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNt.sender)
}
 ::std::string* MessageNt::mutable_sender() {
  set_has_sender();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNt.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageNt::release_sender() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNt.sender)
  clear_has_sender();
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNt::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    set_has_sender();
  } else {
    clear_has_sender();
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNt.sender)
}

// required bytes text = 2;
bool MessageNt::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessageNt::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void MessageNt::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessageNt::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
 const ::std::string& MessageNt::text() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNt.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNt::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNt.text)
}
 void MessageNt::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNt.text)
}
 void MessageNt::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNt.text)
}
 ::std::string* MessageNt::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNt.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageNt::release_text() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNt.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNt::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNt.text)
}

// required string timestamp = 3;
bool MessageNt::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MessageNt::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
void MessageNt::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
void MessageNt::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
 const ::std::string& MessageNt::timestamp() const {
  // @@protoc_insertion_point(field_get:pbmsg.MessageNt.timestamp)
  return timestamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNt::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.MessageNt.timestamp)
}
 void MessageNt::set_timestamp(const char* value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.MessageNt.timestamp)
}
 void MessageNt::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.MessageNt.timestamp)
}
 ::std::string* MessageNt::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:pbmsg.MessageNt.timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageNt::release_timestamp() {
  // @@protoc_insertion_point(field_release:pbmsg.MessageNt.timestamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNt::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.MessageNt.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kLoginFieldNumber;
const int Request::kSendMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.Request)
}

void Request::InitAsDefaultInstance() {
  login_ = const_cast< ::pbmsg::LoginRq*>(&::pbmsg::LoginRq::default_instance());
  sendmessage_ = const_cast< ::pbmsg::SendMessageRq*>(&::pbmsg::SendMessageRq::default_instance());
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  login_ = NULL;
  sendmessage_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:pbmsg.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != default_instance_) {
    delete login_;
    delete sendmessage_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.Request)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_login()) {
      if (login_ != NULL) login_->::pbmsg::LoginRq::Clear();
    }
    if (has_sendmessage()) {
      if (sendmessage_ != NULL) sendmessage_->::pbmsg::SendMessageRq::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pbmsg.LoginRq login = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sendMessage;
        break;
      }

      // optional .pbmsg.SendMessageRq sendMessage = 2;
      case 2: {
        if (tag == 18) {
         parse_sendMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sendmessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.Request)
  // optional .pbmsg.LoginRq login = 1;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->login_, output);
  }

  // optional .pbmsg.SendMessageRq sendMessage = 2;
  if (has_sendmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sendmessage_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.Request)
  // optional .pbmsg.LoginRq login = 1;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->login_, false, target);
  }

  // optional .pbmsg.SendMessageRq sendMessage = 2;
  if (has_sendmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->sendmessage_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.Request)
  return target;
}

int Request::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.Request)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .pbmsg.LoginRq login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->login_);
    }

    // optional .pbmsg.SendMessageRq sendMessage = 2;
    if (has_sendmessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sendmessage_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_login()) {
      mutable_login()->::pbmsg::LoginRq::MergeFrom(from.login());
    }
    if (from.has_sendmessage()) {
      mutable_sendmessage()->::pbmsg::SendMessageRq::MergeFrom(from.sendmessage());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {

  if (has_login()) {
    if (!this->login_->IsInitialized()) return false;
  }
  if (has_sendmessage()) {
    if (!this->sendmessage_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(login_, other->login_);
  std::swap(sendmessage_, other->sendmessage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional .pbmsg.LoginRq login = 1;
bool Request::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_login() {
  if (login_ != NULL) login_->::pbmsg::LoginRq::Clear();
  clear_has_login();
}
const ::pbmsg::LoginRq& Request::login() const {
  // @@protoc_insertion_point(field_get:pbmsg.Request.login)
  return login_ != NULL ? *login_ : *default_instance_->login_;
}
::pbmsg::LoginRq* Request::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::pbmsg::LoginRq;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Request.login)
  return login_;
}
::pbmsg::LoginRq* Request::release_login() {
  // @@protoc_insertion_point(field_release:pbmsg.Request.login)
  clear_has_login();
  ::pbmsg::LoginRq* temp = login_;
  login_ = NULL;
  return temp;
}
void Request::set_allocated_login(::pbmsg::LoginRq* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Request.login)
}

// optional .pbmsg.SendMessageRq sendMessage = 2;
bool Request::has_sendmessage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_sendmessage() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_sendmessage() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_sendmessage() {
  if (sendmessage_ != NULL) sendmessage_->::pbmsg::SendMessageRq::Clear();
  clear_has_sendmessage();
}
const ::pbmsg::SendMessageRq& Request::sendmessage() const {
  // @@protoc_insertion_point(field_get:pbmsg.Request.sendMessage)
  return sendmessage_ != NULL ? *sendmessage_ : *default_instance_->sendmessage_;
}
::pbmsg::SendMessageRq* Request::mutable_sendmessage() {
  set_has_sendmessage();
  if (sendmessage_ == NULL) {
    sendmessage_ = new ::pbmsg::SendMessageRq;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Request.sendMessage)
  return sendmessage_;
}
::pbmsg::SendMessageRq* Request::release_sendmessage() {
  // @@protoc_insertion_point(field_release:pbmsg.Request.sendMessage)
  clear_has_sendmessage();
  ::pbmsg::SendMessageRq* temp = sendmessage_;
  sendmessage_ = NULL;
  return temp;
}
void Request::set_allocated_sendmessage(::pbmsg::SendMessageRq* sendmessage) {
  delete sendmessage_;
  sendmessage_ = sendmessage;
  if (sendmessage) {
    set_has_sendmessage();
  } else {
    clear_has_sendmessage();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Request.sendMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Respond::kResultFieldNumber;
const int Respond::kLastRespondFieldNumber;
const int Respond::kErrorDescribeFieldNumber;
const int Respond::kLoginFieldNumber;
const int Respond::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Respond::Respond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.Respond)
}

void Respond::InitAsDefaultInstance() {
  login_ = const_cast< ::pbmsg::LoginRs*>(&::pbmsg::LoginRs::default_instance());
  friends_ = const_cast< ::pbmsg::GetFriendsRs*>(&::pbmsg::GetFriendsRs::default_instance());
}

Respond::Respond(const Respond& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.Respond)
}

void Respond::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = false;
  lastrespond_ = false;
  errordescribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_ = NULL;
  friends_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Respond::~Respond() {
  // @@protoc_insertion_point(destructor:pbmsg.Respond)
  SharedDtor();
}

void Respond::SharedDtor() {
  errordescribe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete login_;
    delete friends_;
  }
}

void Respond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Respond::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Respond_descriptor_;
}

const Respond& Respond::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Respond* Respond::default_instance_ = NULL;

Respond* Respond::New(::google::protobuf::Arena* arena) const {
  Respond* n = new Respond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Respond::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.Respond)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Respond, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Respond*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(result_, lastrespond_);
    if (has_errordescribe()) {
      errordescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_login()) {
      if (login_ != NULL) login_->::pbmsg::LoginRs::Clear();
    }
    if (has_friends()) {
      if (friends_ != NULL) friends_->::pbmsg::GetFriendsRs::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Respond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.Respond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_lastRespond;
        break;
      }

      // required bool lastRespond = 2;
      case 2: {
        if (tag == 16) {
         parse_lastRespond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lastrespond_)));
          set_has_lastrespond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_errorDescribe;
        break;
      }

      // optional bytes errorDescribe = 3;
      case 3: {
        if (tag == 26) {
         parse_errorDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_errordescribe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_login;
        break;
      }

      // optional .pbmsg.LoginRs login = 4;
      case 4: {
        if (tag == 34) {
         parse_login:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_friends;
        break;
      }

      // optional .pbmsg.GetFriendsRs friends = 5;
      case 5: {
        if (tag == 42) {
         parse_friends:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friends()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.Respond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.Respond)
  return false;
#undef DO_
}

void Respond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.Respond)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // required bool lastRespond = 2;
  if (has_lastrespond()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->lastrespond(), output);
  }

  // optional bytes errorDescribe = 3;
  if (has_errordescribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->errordescribe(), output);
  }

  // optional .pbmsg.LoginRs login = 4;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->login_, output);
  }

  // optional .pbmsg.GetFriendsRs friends = 5;
  if (has_friends()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->friends_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.Respond)
}

::google::protobuf::uint8* Respond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.Respond)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // required bool lastRespond = 2;
  if (has_lastrespond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->lastrespond(), target);
  }

  // optional bytes errorDescribe = 3;
  if (has_errordescribe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->errordescribe(), target);
  }

  // optional .pbmsg.LoginRs login = 4;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->login_, false, target);
  }

  // optional .pbmsg.GetFriendsRs friends = 5;
  if (has_friends()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->friends_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.Respond)
  return target;
}

int Respond::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pbmsg.Respond)
  int total_size = 0;

  if (has_result()) {
    // required bool result = 1;
    total_size += 1 + 1;
  }

  if (has_lastrespond()) {
    // required bool lastRespond = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int Respond::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.Respond)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool result = 1;
    total_size += 1 + 1;

    // required bool lastRespond = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 28u) {
    // optional bytes errorDescribe = 3;
    if (has_errordescribe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->errordescribe());
    }

    // optional .pbmsg.LoginRs login = 4;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->login_);
    }

    // optional .pbmsg.GetFriendsRs friends = 5;
    if (has_friends()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->friends_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Respond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.Respond)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Respond* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Respond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.Respond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.Respond)
    MergeFrom(*source);
  }
}

void Respond::MergeFrom(const Respond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.Respond)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_lastrespond()) {
      set_lastrespond(from.lastrespond());
    }
    if (from.has_errordescribe()) {
      set_has_errordescribe();
      errordescribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errordescribe_);
    }
    if (from.has_login()) {
      mutable_login()->::pbmsg::LoginRs::MergeFrom(from.login());
    }
    if (from.has_friends()) {
      mutable_friends()->::pbmsg::GetFriendsRs::MergeFrom(from.friends());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Respond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.Respond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Respond::CopyFrom(const Respond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.Respond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Respond::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_login()) {
    if (!this->login_->IsInitialized()) return false;
  }
  if (has_friends()) {
    if (!this->friends_->IsInitialized()) return false;
  }
  return true;
}

void Respond::Swap(Respond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Respond::InternalSwap(Respond* other) {
  std::swap(result_, other->result_);
  std::swap(lastrespond_, other->lastrespond_);
  errordescribe_.Swap(&other->errordescribe_);
  std::swap(login_, other->login_);
  std::swap(friends_, other->friends_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Respond::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Respond_descriptor_;
  metadata.reflection = Respond_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Respond

// required bool result = 1;
bool Respond::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Respond::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void Respond::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void Respond::clear_result() {
  result_ = false;
  clear_has_result();
}
 bool Respond::result() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.result)
  return result_;
}
 void Respond::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Respond.result)
}

// required bool lastRespond = 2;
bool Respond::has_lastrespond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Respond::set_has_lastrespond() {
  _has_bits_[0] |= 0x00000002u;
}
void Respond::clear_has_lastrespond() {
  _has_bits_[0] &= ~0x00000002u;
}
void Respond::clear_lastrespond() {
  lastrespond_ = false;
  clear_has_lastrespond();
}
 bool Respond::lastrespond() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.lastRespond)
  return lastrespond_;
}
 void Respond::set_lastrespond(bool value) {
  set_has_lastrespond();
  lastrespond_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Respond.lastRespond)
}

// optional bytes errorDescribe = 3;
bool Respond::has_errordescribe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Respond::set_has_errordescribe() {
  _has_bits_[0] |= 0x00000004u;
}
void Respond::clear_has_errordescribe() {
  _has_bits_[0] &= ~0x00000004u;
}
void Respond::clear_errordescribe() {
  errordescribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errordescribe();
}
 const ::std::string& Respond::errordescribe() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.errorDescribe)
  return errordescribe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Respond::set_errordescribe(const ::std::string& value) {
  set_has_errordescribe();
  errordescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pbmsg.Respond.errorDescribe)
}
 void Respond::set_errordescribe(const char* value) {
  set_has_errordescribe();
  errordescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pbmsg.Respond.errorDescribe)
}
 void Respond::set_errordescribe(const void* value, size_t size) {
  set_has_errordescribe();
  errordescribe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pbmsg.Respond.errorDescribe)
}
 ::std::string* Respond::mutable_errordescribe() {
  set_has_errordescribe();
  // @@protoc_insertion_point(field_mutable:pbmsg.Respond.errorDescribe)
  return errordescribe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Respond::release_errordescribe() {
  // @@protoc_insertion_point(field_release:pbmsg.Respond.errorDescribe)
  clear_has_errordescribe();
  return errordescribe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Respond::set_allocated_errordescribe(::std::string* errordescribe) {
  if (errordescribe != NULL) {
    set_has_errordescribe();
  } else {
    clear_has_errordescribe();
  }
  errordescribe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errordescribe);
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Respond.errorDescribe)
}

// optional .pbmsg.LoginRs login = 4;
bool Respond::has_login() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Respond::set_has_login() {
  _has_bits_[0] |= 0x00000008u;
}
void Respond::clear_has_login() {
  _has_bits_[0] &= ~0x00000008u;
}
void Respond::clear_login() {
  if (login_ != NULL) login_->::pbmsg::LoginRs::Clear();
  clear_has_login();
}
const ::pbmsg::LoginRs& Respond::login() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.login)
  return login_ != NULL ? *login_ : *default_instance_->login_;
}
::pbmsg::LoginRs* Respond::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::pbmsg::LoginRs;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Respond.login)
  return login_;
}
::pbmsg::LoginRs* Respond::release_login() {
  // @@protoc_insertion_point(field_release:pbmsg.Respond.login)
  clear_has_login();
  ::pbmsg::LoginRs* temp = login_;
  login_ = NULL;
  return temp;
}
void Respond::set_allocated_login(::pbmsg::LoginRs* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Respond.login)
}

// optional .pbmsg.GetFriendsRs friends = 5;
bool Respond::has_friends() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Respond::set_has_friends() {
  _has_bits_[0] |= 0x00000010u;
}
void Respond::clear_has_friends() {
  _has_bits_[0] &= ~0x00000010u;
}
void Respond::clear_friends() {
  if (friends_ != NULL) friends_->::pbmsg::GetFriendsRs::Clear();
  clear_has_friends();
}
const ::pbmsg::GetFriendsRs& Respond::friends() const {
  // @@protoc_insertion_point(field_get:pbmsg.Respond.friends)
  return friends_ != NULL ? *friends_ : *default_instance_->friends_;
}
::pbmsg::GetFriendsRs* Respond::mutable_friends() {
  set_has_friends();
  if (friends_ == NULL) {
    friends_ = new ::pbmsg::GetFriendsRs;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Respond.friends)
  return friends_;
}
::pbmsg::GetFriendsRs* Respond::release_friends() {
  // @@protoc_insertion_point(field_release:pbmsg.Respond.friends)
  clear_has_friends();
  ::pbmsg::GetFriendsRs* temp = friends_;
  friends_ = NULL;
  return temp;
}
void Respond::set_allocated_friends(::pbmsg::GetFriendsRs* friends) {
  delete friends_;
  friends_ = friends;
  if (friends) {
    set_has_friends();
  } else {
    clear_has_friends();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Respond.friends)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notify::kHeartbeatFieldNumber;
const int Notify::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notify::Notify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.Notify)
}

void Notify::InitAsDefaultInstance() {
  heartbeat_ = const_cast< ::pbmsg::HeartbeatNt*>(&::pbmsg::HeartbeatNt::default_instance());
  message_ = const_cast< ::pbmsg::MessageNt*>(&::pbmsg::MessageNt::default_instance());
}

Notify::Notify(const Notify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.Notify)
}

void Notify::SharedCtor() {
  _cached_size_ = 0;
  heartbeat_ = NULL;
  message_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Notify::~Notify() {
  // @@protoc_insertion_point(destructor:pbmsg.Notify)
  SharedDtor();
}

void Notify::SharedDtor() {
  if (this != default_instance_) {
    delete heartbeat_;
    delete message_;
  }
}

void Notify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notify_descriptor_;
}

const Notify& Notify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Notify* Notify::default_instance_ = NULL;

Notify* Notify::New(::google::protobuf::Arena* arena) const {
  Notify* n = new Notify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.Notify)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_heartbeat()) {
      if (heartbeat_ != NULL) heartbeat_->::pbmsg::HeartbeatNt::Clear();
    }
    if (has_message()) {
      if (message_ != NULL) message_->::pbmsg::MessageNt::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.Notify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pbmsg.HeartbeatNt heartbeat = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heartbeat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_message;
        break;
      }

      // optional .pbmsg.MessageNt message = 2;
      case 2: {
        if (tag == 18) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.Notify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.Notify)
  return false;
#undef DO_
}

void Notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.Notify)
  // optional .pbmsg.HeartbeatNt heartbeat = 1;
  if (has_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->heartbeat_, output);
  }

  // optional .pbmsg.MessageNt message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->message_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.Notify)
}

::google::protobuf::uint8* Notify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.Notify)
  // optional .pbmsg.HeartbeatNt heartbeat = 1;
  if (has_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->heartbeat_, false, target);
  }

  // optional .pbmsg.MessageNt message = 2;
  if (has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->message_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.Notify)
  return target;
}

int Notify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.Notify)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .pbmsg.HeartbeatNt heartbeat = 1;
    if (has_heartbeat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->heartbeat_);
    }

    // optional .pbmsg.MessageNt message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->message_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.Notify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Notify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Notify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.Notify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.Notify)
    MergeFrom(*source);
  }
}

void Notify::MergeFrom(const Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.Notify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heartbeat()) {
      mutable_heartbeat()->::pbmsg::HeartbeatNt::MergeFrom(from.heartbeat());
    }
    if (from.has_message()) {
      mutable_message()->::pbmsg::MessageNt::MergeFrom(from.message());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Notify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify::CopyFrom(const Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify::IsInitialized() const {

  if (has_heartbeat()) {
    if (!this->heartbeat_->IsInitialized()) return false;
  }
  if (has_message()) {
    if (!this->message_->IsInitialized()) return false;
  }
  return true;
}

void Notify::Swap(Notify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notify::InternalSwap(Notify* other) {
  std::swap(heartbeat_, other->heartbeat_);
  std::swap(message_, other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Notify_descriptor_;
  metadata.reflection = Notify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Notify

// optional .pbmsg.HeartbeatNt heartbeat = 1;
bool Notify::has_heartbeat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Notify::set_has_heartbeat() {
  _has_bits_[0] |= 0x00000001u;
}
void Notify::clear_has_heartbeat() {
  _has_bits_[0] &= ~0x00000001u;
}
void Notify::clear_heartbeat() {
  if (heartbeat_ != NULL) heartbeat_->::pbmsg::HeartbeatNt::Clear();
  clear_has_heartbeat();
}
const ::pbmsg::HeartbeatNt& Notify::heartbeat() const {
  // @@protoc_insertion_point(field_get:pbmsg.Notify.heartbeat)
  return heartbeat_ != NULL ? *heartbeat_ : *default_instance_->heartbeat_;
}
::pbmsg::HeartbeatNt* Notify::mutable_heartbeat() {
  set_has_heartbeat();
  if (heartbeat_ == NULL) {
    heartbeat_ = new ::pbmsg::HeartbeatNt;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Notify.heartbeat)
  return heartbeat_;
}
::pbmsg::HeartbeatNt* Notify::release_heartbeat() {
  // @@protoc_insertion_point(field_release:pbmsg.Notify.heartbeat)
  clear_has_heartbeat();
  ::pbmsg::HeartbeatNt* temp = heartbeat_;
  heartbeat_ = NULL;
  return temp;
}
void Notify::set_allocated_heartbeat(::pbmsg::HeartbeatNt* heartbeat) {
  delete heartbeat_;
  heartbeat_ = heartbeat;
  if (heartbeat) {
    set_has_heartbeat();
  } else {
    clear_has_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Notify.heartbeat)
}

// optional .pbmsg.MessageNt message = 2;
bool Notify::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Notify::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
void Notify::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
void Notify::clear_message() {
  if (message_ != NULL) message_->::pbmsg::MessageNt::Clear();
  clear_has_message();
}
const ::pbmsg::MessageNt& Notify::message() const {
  // @@protoc_insertion_point(field_get:pbmsg.Notify.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
::pbmsg::MessageNt* Notify::mutable_message() {
  set_has_message();
  if (message_ == NULL) {
    message_ = new ::pbmsg::MessageNt;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Notify.message)
  return message_;
}
::pbmsg::MessageNt* Notify::release_message() {
  // @@protoc_insertion_point(field_release:pbmsg.Notify.message)
  clear_has_message();
  ::pbmsg::MessageNt* temp = message_;
  message_ = NULL;
  return temp;
}
void Notify::set_allocated_message(::pbmsg::MessageNt* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Notify.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kMsgTypeFieldNumber;
const int Message::kSequenceFieldNumber;
const int Message::kSessionIdFieldNumber;
const int Message::kRequestFieldNumber;
const int Message::kRespondFieldNumber;
const int Message::kNotifyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pbmsg.Message)
}

void Message::InitAsDefaultInstance() {
  request_ = const_cast< ::pbmsg::Request*>(&::pbmsg::Request::default_instance());
  respond_ = const_cast< ::pbmsg::Respond*>(&::pbmsg::Respond::default_instance());
  notify_ = const_cast< ::pbmsg::Notify*>(&::pbmsg::Notify::default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pbmsg.Message)
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 10001;
  sequence_ = 0u;
  sessionid_ = 0u;
  request_ = NULL;
  respond_ = NULL;
  notify_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:pbmsg.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
    delete respond_;
    delete notify_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:pbmsg.Message)
  if (_has_bits_[0 / 32] & 63u) {
    msgtype_ = 10001;
    sequence_ = 0u;
    sessionid_ = 0u;
    if (has_request()) {
      if (request_ != NULL) request_->::pbmsg::Request::Clear();
    }
    if (has_respond()) {
      if (respond_ != NULL) respond_->::pbmsg::Respond::Clear();
    }
    if (has_notify()) {
      if (notify_ != NULL) notify_->::pbmsg::Notify::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pbmsg.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pbmsg.EMsg msgType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pbmsg::EMsg_IsValid(value)) {
            set_msgtype(static_cast< ::pbmsg::EMsg >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_sequence;
        break;
      }

      // required fixed32 sequence = 2;
      case 2: {
        if (tag == 21) {
         parse_sequence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &sequence_)));
          set_has_sequence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_sessionId;
        break;
      }

      // optional fixed32 sessionId = 3;
      case 3: {
        if (tag == 29) {
         parse_sessionId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &sessionid_)));
          set_has_sessionid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_request;
        break;
      }

      // optional .pbmsg.Request request = 4;
      case 4: {
        if (tag == 34) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_respond;
        break;
      }

      // optional .pbmsg.Respond respond = 5;
      case 5: {
        if (tag == 42) {
         parse_respond:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respond()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_notify;
        break;
      }

      // optional .pbmsg.Notify notify = 6;
      case 6: {
        if (tag == 50) {
         parse_notify:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notify()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pbmsg.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pbmsg.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pbmsg.Message)
  // required .pbmsg.EMsg msgType = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // required fixed32 sequence = 2;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->sequence(), output);
  }

  // optional fixed32 sessionId = 3;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->sessionid(), output);
  }

  // optional .pbmsg.Request request = 4;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->request_, output);
  }

  // optional .pbmsg.Respond respond = 5;
  if (has_respond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->respond_, output);
  }

  // optional .pbmsg.Notify notify = 6;
  if (has_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->notify_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pbmsg.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbmsg.Message)
  // required .pbmsg.EMsg msgType = 1;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // required fixed32 sequence = 2;
  if (has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->sequence(), target);
  }

  // optional fixed32 sessionId = 3;
  if (has_sessionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->sessionid(), target);
  }

  // optional .pbmsg.Request request = 4;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->request_, false, target);
  }

  // optional .pbmsg.Respond respond = 5;
  if (has_respond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->respond_, false, target);
  }

  // optional .pbmsg.Notify notify = 6;
  if (has_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->notify_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbmsg.Message)
  return target;
}

int Message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pbmsg.Message)
  int total_size = 0;

  if (has_msgtype()) {
    // required .pbmsg.EMsg msgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  if (has_sequence()) {
    // required fixed32 sequence = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
int Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pbmsg.Message)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .pbmsg.EMsg msgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());

    // required fixed32 sequence = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 60u) {
    // optional fixed32 sessionId = 3;
    if (has_sessionid()) {
      total_size += 1 + 4;
    }

    // optional .pbmsg.Request request = 4;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->request_);
    }

    // optional .pbmsg.Respond respond = 5;
    if (has_respond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->respond_);
    }

    // optional .pbmsg.Notify notify = 6;
    if (has_notify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->notify_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pbmsg.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pbmsg.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pbmsg.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbmsg.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_sessionid()) {
      set_sessionid(from.sessionid());
    }
    if (from.has_request()) {
      mutable_request()->::pbmsg::Request::MergeFrom(from.request());
    }
    if (from.has_respond()) {
      mutable_respond()->::pbmsg::Respond::MergeFrom(from.respond());
    }
    if (from.has_notify()) {
      mutable_notify()->::pbmsg::Notify::MergeFrom(from.notify());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pbmsg.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbmsg.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_request()) {
    if (!this->request_->IsInitialized()) return false;
  }
  if (has_respond()) {
    if (!this->respond_->IsInitialized()) return false;
  }
  if (has_notify()) {
    if (!this->notify_->IsInitialized()) return false;
  }
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(sequence_, other->sequence_);
  std::swap(sessionid_, other->sessionid_);
  std::swap(request_, other->request_);
  std::swap(respond_, other->respond_);
  std::swap(notify_, other->notify_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// required .pbmsg.EMsg msgType = 1;
bool Message::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Message::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
void Message::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void Message::clear_msgtype() {
  msgtype_ = 10001;
  clear_has_msgtype();
}
 ::pbmsg::EMsg Message::msgtype() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.msgType)
  return static_cast< ::pbmsg::EMsg >(msgtype_);
}
 void Message::set_msgtype(::pbmsg::EMsg value) {
  assert(::pbmsg::EMsg_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.msgType)
}

// required fixed32 sequence = 2;
bool Message::has_sequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Message::set_has_sequence() {
  _has_bits_[0] |= 0x00000002u;
}
void Message::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000002u;
}
void Message::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
 ::google::protobuf::uint32 Message::sequence() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.sequence)
  return sequence_;
}
 void Message::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.sequence)
}

// optional fixed32 sessionId = 3;
bool Message::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Message::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
void Message::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Message::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
 ::google::protobuf::uint32 Message::sessionid() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.sessionId)
  return sessionid_;
}
 void Message::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:pbmsg.Message.sessionId)
}

// optional .pbmsg.Request request = 4;
bool Message::has_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Message::set_has_request() {
  _has_bits_[0] |= 0x00000008u;
}
void Message::clear_has_request() {
  _has_bits_[0] &= ~0x00000008u;
}
void Message::clear_request() {
  if (request_ != NULL) request_->::pbmsg::Request::Clear();
  clear_has_request();
}
const ::pbmsg::Request& Message::request() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.request)
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
::pbmsg::Request* Message::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::pbmsg::Request;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.request)
  return request_;
}
::pbmsg::Request* Message::release_request() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.request)
  clear_has_request();
  ::pbmsg::Request* temp = request_;
  request_ = NULL;
  return temp;
}
void Message::set_allocated_request(::pbmsg::Request* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.request)
}

// optional .pbmsg.Respond respond = 5;
bool Message::has_respond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Message::set_has_respond() {
  _has_bits_[0] |= 0x00000010u;
}
void Message::clear_has_respond() {
  _has_bits_[0] &= ~0x00000010u;
}
void Message::clear_respond() {
  if (respond_ != NULL) respond_->::pbmsg::Respond::Clear();
  clear_has_respond();
}
const ::pbmsg::Respond& Message::respond() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.respond)
  return respond_ != NULL ? *respond_ : *default_instance_->respond_;
}
::pbmsg::Respond* Message::mutable_respond() {
  set_has_respond();
  if (respond_ == NULL) {
    respond_ = new ::pbmsg::Respond;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.respond)
  return respond_;
}
::pbmsg::Respond* Message::release_respond() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.respond)
  clear_has_respond();
  ::pbmsg::Respond* temp = respond_;
  respond_ = NULL;
  return temp;
}
void Message::set_allocated_respond(::pbmsg::Respond* respond) {
  delete respond_;
  respond_ = respond;
  if (respond) {
    set_has_respond();
  } else {
    clear_has_respond();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.respond)
}

// optional .pbmsg.Notify notify = 6;
bool Message::has_notify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Message::set_has_notify() {
  _has_bits_[0] |= 0x00000020u;
}
void Message::clear_has_notify() {
  _has_bits_[0] &= ~0x00000020u;
}
void Message::clear_notify() {
  if (notify_ != NULL) notify_->::pbmsg::Notify::Clear();
  clear_has_notify();
}
const ::pbmsg::Notify& Message::notify() const {
  // @@protoc_insertion_point(field_get:pbmsg.Message.notify)
  return notify_ != NULL ? *notify_ : *default_instance_->notify_;
}
::pbmsg::Notify* Message::mutable_notify() {
  set_has_notify();
  if (notify_ == NULL) {
    notify_ = new ::pbmsg::Notify;
  }
  // @@protoc_insertion_point(field_mutable:pbmsg.Message.notify)
  return notify_;
}
::pbmsg::Notify* Message::release_notify() {
  // @@protoc_insertion_point(field_release:pbmsg.Message.notify)
  clear_has_notify();
  ::pbmsg::Notify* temp = notify_;
  notify_ = NULL;
  return temp;
}
void Message::set_allocated_notify(::pbmsg::Notify* notify) {
  delete notify_;
  notify_ = notify;
  if (notify) {
    set_has_notify();
  } else {
    clear_has_notify();
  }
  // @@protoc_insertion_point(field_set_allocated:pbmsg.Message.notify)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pbmsg

// @@protoc_insertion_point(global_scope)
